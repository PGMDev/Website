(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{177:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return m}));var a=t(1),o=t(9),r=(t(0),t(227)),l={id:"the-fenland",title:"The Fenland (DTM)"},i={id:"examples/the-fenland",title:"The Fenland (DTM)",description:"The Fenland is a Destroy the Monument map where you have to destroy the other team's obsidian monument to win the game.",source:"@site/docs/examples/the-fenland.mdx",permalink:"/docs/examples/the-fenland",editUrl:"https://github.com/PGMDev/Website/edit/master/docs/examples/the-fenland.mdx",sidebar:"Examples",previous:{title:"Race for Victory (CTW)",permalink:"/docs/examples/race-for-victory"},next:{title:"Warlock (DTM)",permalink:"/docs/examples/warlock"}},c=[],s={rightToc:c};function m(e){var n=e.components,t=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The Fenland is a Destroy the Monument map where you have to destroy the other team's obsidian monument to win the game.\nPlayers fight with diamond axes and spawn with their own building materials."),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"/img/examples/fenland1.png",alt:null})),"\n",Object(r.b)("em",{parentName:"p"},"Because of the lakes in the middle, a lot of the action takes place on the edges of the map, and on\nsky bridges built over the centre of the map.")),Object(r.b)("p",null,Object(r.b)("img",Object(a.a)({parentName:"p"},{src:"/img/examples/fenland2.png",alt:null})),"\n",Object(r.b)("em",{parentName:"p"},"The monument is made of two obsidian blocks that are protected by cobblestone slabs and wooden fences.\nAll players spawn with diamond pickaxes necessary to break them.")),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/general/main"}),Object(r.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nEvery map XML file starts with the XML header and then the base ",Object(r.b)("inlineCode",{parentName:"p"},"<map>")," module."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),'<?xml version="1.0"?>\n<map proto="1.4.2">\n\x3c!-- Specifies what the map is called --\x3e\n<name>The Fenland</name>\n\x3c!-- States what version the map is --\x3e\n<version>1.2.10</version>\n\x3c!-- Tells the teams what the objective is in order to win the game --\x3e\n<objective>Break the obsidian from the enemy team\'s monument.</objective>\n\x3c!-- States who made the map --\x3e\n<authors>\n    <author uuid="e5953ddf-c1fc-4405-9ac9-6939631cd185"/> \x3c!-- McSpider --\x3e\n</authors>\n')),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/format/teams"}),Object(r.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nDefines the teams ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/reference/misc/formatting#chatColors"}),"colors"),", names and how many people can be on the teams."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),'<teams>\n    <team color="dark red" max="14">Red</team>\n    <team color="blue" max="14">Blue</team>\n</teams>\n')),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/environment/world/#build-height"}),Object(r.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nThis specifies how high players can build however it doesn't stop them from going over this limit."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<maxbuildheight>25</maxbuildheight>\n")),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/mechanics/spawns"}),Object(r.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nDefines the spawn areas and the kit each team gets."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),'<spawns>\n    <spawns kit="spawn" safe="true">\n        <spawn team="red" yaw="-90">\n            <region>\n                <cuboid min="-43,11,-2" max="-46,11,3"/>\n            </region>\n        </spawn>\n        <spawn team="blue" yaw="90">\n            <region>\n                <cuboid min="44,11,3" max="47,11,-2"/>\n            </region>\n        </spawn>\n    </spawns>\n    <default yaw="180">\n        <region>\n            <cuboid min="-3,25,-44" max="3,25,-50"/>\n        </region>\n    </default>\n</spawns>\n')),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/mechanics/filters"}),Object(r.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nDefines the filters on the map and determines which events are allowed."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),'<filters>\n    <all id="only-blue">\n        <team>blue</team>\n    </all>\n    <all id="only-red">\n        <team>red</team>\n    </all>\n    <all id="no-beacon">\n        <not>\n            <material>beacon</material>\n        </not>\n    </all>\n</filters>\n')),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/mechanics/regions"}),Object(r.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nDefines regions that can be later used to apply spawns, filters, etc"),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),'<regions>\n    \x3c!-- Only the Red Team can enter their own spawn --\x3e\n    <apply enter="only-red" message="You may not enter the enemy team\'s base!">\n        <cuboid min="-49,13,-4" max="-40,10,4"/>\n    </apply>\n    \x3c!-- Red Spawn can never be damaged --\x3e\n    <apply block="never" message="You may not modify the base!">\n        <cuboid min="-49,7,5" max="-36,16,-4"/>\n    </apply>\n    \x3c!-- Only the Blue Team can enter their own spawn --\x3e\n    <apply enter="only-blue" message="You may not enter the enemy team\'s base!">\n        <cuboid min="49,13,4" max="41,10,-4"/>\n    </apply>\n    \x3c!-- Blue Spawn can never be damaged --\x3e\n    <apply block="never" message="You may not modify the base!">\n        <cuboid min="50,7,-4" max="37,16,5"/>\n    </apply>\n    \x3c!-- Players can\'t build outside of the playable area --\x3e\n    <apply block="never" message="You may not build outside the playing area!">\n        <negative id="playable-inverse">\n            <cuboid id="playable" min="64,0,-38" max="-63,31,39"/>\n        </negative>\n    </apply>\n    \x3c!-- Players can\'t enter the observer spawn island --\x3e\n    <apply enter="never" message="Don\'t enter the observers spawn area!">\n        <cylinder base="0.5,19,-46.5" radius="6" height="oo"/>\n    </apply>\n    \x3c!-- Players can\'t use (right click) beacon blocks --\x3e\n    <apply use="no-beacon">\n        <region id="playable"/>\n    </apply>\n</regions>\n')),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/objectives/dtm"}),Object(r.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nThis specifies what material the monuments are made of, and where each monument belongs to."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),'<destroyables name="Monument" materials="obsidian" completion="100%" mode-changes="true">\n    <destroyable owner="blue">\n        <cuboid min="46,16,26" max="45,14,25"/>\n    </destroyable>\n    <destroyable owner="red">\n        <cuboid min="-44,16,-24" max="-45,14,-25"/>\n    </destroyable>\n</destroyables>\n\x3c!-- The monuments which are made of obsidian will turn into beacon blocks in 20 minutes --\x3e\n<modes>\n    <mode material="beacon" after="20m"/>\n</modes>\n')),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/gear/kits"}),Object(r.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nDefines the spawn kit that all players get."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),'<kits>\n    <kit id="spawn">\n        <item slot="0" enchantment="durability:1">diamond axe</item>\n        <item slot="1" enchantment="arrow infinite:1">bow</item>\n        <item slot="2">diamond pickaxe</item>\n        <item slot="3">iron spade</item>\n        <item slot="4" amount="64">log</item>\n        <item slot="5" amount="32">glass</item>\n        <item slot="7" amount="4">gold nugget</item>\n        <item slot="8" amount="32">cooked fish</item>\n        <item slot="28">arrow</item>\n        <chestplate enchantment="protection projectile:2">iron chestplate</chestplate>\n        <boots>iron boots</boots>\n    </kit>\n</kits>\n')),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/gear/repair-remove-keep"}),Object(r.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nWe don't want an excessive amount of items dropped on the map, so this allows us to manage\nhow to deal with dropped items more easily."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"\x3c!-- These items will drop, players that already have these items can pick it up and will be merged --\x3e\n<toolrepair>\n    <tool>diamond axe</tool>\n    <tool>diamond pickaxe</tool>\n    <tool>iron spade</tool>\n    <tool>bow</tool>\n</toolrepair>\n\x3c!-- All of these items will be automatically removed when dropped --\x3e\n<itemremove>\n    <item>arrow</item>\n    <item>iron chestplate</item>\n    <item>iron boots</item>\n    <item>glass</item>\n    <item>wood</item>\n    <item>log</item>\n    <item>cooked fish</item>\n    <item>obsidian</item>\n    <item>beacon</item>\n    <item>redstone block</item>\n    <item>golden apple</item>\n</itemremove>\n")),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/gear/kill-rewards"}),Object(r.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nGive players a goldn apple for killing an enemy."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<killreward>\n    <item>golden apple</item>\n</killreward>\n")),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/gear/tnt"}),Object(r.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nTNT will instantly ignite when placed, and teammates can't defuse their own team's TNT."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"\x3c!-- TNT will automatically ignite when placed --\x3e\n\x3c!-- TNT will not break any blocks but still cause damage to players --\x3e\n\x3c!-- Players can't defuse a teammate's TNT --\x3e\n<tnt>\n    <instantignite>on</instantignite>\n    <friendly-defuse>off</friendly-defuse>\n</tnt>\n")),Object(r.b)("p",null,Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/general/main"}),Object(r.b)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nClose the main ",Object(r.b)("inlineCode",{parentName:"p"},"<map>")," module."),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"</map>\n")))}m.isMDXComponent=!0},227:function(e,n,t){"use strict";t.d(n,"a",(function(){return b})),t.d(n,"b",(function(){return u}));var a=t(0),o=t.n(a);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=o.a.createContext({}),m=function(e){var n=o.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i({},n,{},e)),t},b=function(e){var n=m(e.components);return o.a.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.a.createElement(o.a.Fragment,{},n)}},d=Object(a.forwardRef)((function(e,n){var t=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),b=m(t),d=a,u=b["".concat(l,".").concat(d)]||b[d]||p[d]||r;return t?o.a.createElement(u,i({ref:n},s,{components:t})):o.a.createElement(u,i({ref:n},s))}));function u(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=t.length,l=new Array(r);l[0]=d;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var s=2;s<r;s++)l[s]=t[s];return o.a.createElement.apply(null,l)}return o.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);