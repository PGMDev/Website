(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{144:function(e,t,l){"use strict";l.r(t),l.d(t,"frontMatter",(function(){return b})),l.d(t,"metadata",(function(){return c})),l.d(t,"rightToc",(function(){return i})),l.d(t,"default",(function(){return s}));var a=l(1),n=l(9),r=(l(0),l(228)),b={id:"teams",title:"Teams"},c={id:"modules/format/teams",title:"Teams",description:"This module is used to specify the teams used in the match and what their attributes are.",source:"@site/docs/modules/format/teams.mdx",permalink:"/docs/modules/format/teams",editUrl:"https://github.com/PGMDev/Website/edit/master/docs/modules/format/teams.mdx",sidebar:"Modules",previous:{title:"Players (free-for-all)",permalink:"/docs/modules/format/players"},next:{title:"Capture the Wool",permalink:"/docs/modules/objectives/ctw"}},i=[],o={rightToc:i};function s(e){var t=e.components,l=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},o,l,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"This module is used to specify the teams used in the match and what their attributes are.\nMatches without teams can be setup with the ",Object(r.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/format/players"}),"players")," module."),Object(r.b)("p",null,"The soft player limit for each team is set with the ",Object(r.b)("inlineCode",{parentName:"p"},'max=""')," attribute and the hard limit with ",Object(r.b)("inlineCode",{parentName:"p"},"max-overfill"),". If max overfill is not explicitly defined the default will be set to 25% over the maximum team size. Players will not be able to join teams once the max overfill team size is reached."),Object(r.b)("p",null,"The team's name is specified inside the ",Object(r.b)("inlineCode",{parentName:"p"},"<team>"),' element. The name should be kept as short as possible and not contain "Team", for example, "Azure" and not "Azure Team".\nA team\'s ',Object(r.b)("inlineCode",{parentName:"p"},"plural"),' attribute specifies if the team name is plural, e.g. "Attackers"; PGM will use this to pick appropriate win messages, etc. The ',Object(r.b)("inlineCode",{parentName:"p"},"show-name-tags")," attribute specifies who can see player name tags, this only applies to players, observers will always see all name tags."),Object(r.b)("p",null,"It is common for maps to only have 2 teams, although more are possible it usually just causes confusion."),Object(r.b)("div",{className:"table-container"},Object(r.b)("table",null,Object(r.b)("thead",null,Object(r.b)("tr",null,Object(r.b)("th",null,"Teams Element"),Object(r.b)("th",null,"Description"),Object(r.b)("th",null,"Value"))),Object(r.b)("tbody",null,Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("label",null,"<teams> </teams>")),Object(r.b)("td",null,"The teams node, containing all the individual teams.")),Object(r.b)("tr",null,Object(r.b)("th",null,"Sub-elements"),Object(r.b)("th",null),Object(r.b)("th",null)),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("label",null,"<team> </team>")),Object(r.b)("td",null,"A single team node containing the teams name."),Object(r.b)("td",null,Object(r.b)("span",{className:"badge badge--primary"},"String")))))),Object(r.b)("h5",{id:"team-attributes"},"Team Attributes"),Object(r.b)("div",{className:"table-container"},Object(r.b)("table",null,Object(r.b)("thead",null,Object(r.b)("tr",null,Object(r.b)("th",{style:{minWidth:"130px"}},"Attribute"),Object(r.b)("th",null,"Description"),Object(r.b)("th",{style:{minWidth:"120px"}},"Value"))),Object(r.b)("tbody",null,Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("label",null,"id")),Object(r.b)("td",null,"Unique identifier used to reference teams from other places in the XML."),Object(r.b)("td",null,Object(r.b)("span",{className:"badge badge--primary"},"String"))),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("label",null,"color")),Object(r.b)("td",null,"The team's display color."),Object(r.b)("td",null,Object(r.b)("a",{href:"/docs/reference/misc/formatting#chatColors"},"Chat Color Name"))),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("label",null,"overhead-color")),Object(r.b)("td",null,"The color of a player's name tag on this team."),Object(r.b)("td",null,Object(r.b)("a",{href:"/docs/reference/misc/formatting#chatColors"},"Chat Color Name"))),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("label",null,"plural")),Object(r.b)("td",null,"The team's name is plural, used in status messages.",Object(r.b)("br",null),"e.g., ",Object(r.b)("label",null,"Defenders win!")," instead of"," ",Object(r.b)("label",null,"Defenders wins!")),Object(r.b)("td",null,Object(r.b)("span",{className:"badge badge--primary"},"true/false"))),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("label",null,"show-name-tags")),Object(r.b)("td",null,"Specify who can see the name tags of players in this team.",Object(r.b)("br",null),"Accepts:",Object(r.b)("label",null,"true"),", ",Object(r.b)("label",null,"false"),", ",Object(r.b)("label",null,"allies")," or ",Object(r.b)("label",null,"enemies")),Object(r.b)("td",null,Object(r.b)("span",{className:"badge badge--primary"},"Enum"))),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("label",null,"min")),Object(r.b)("td",null,"Required amount of players for this team."),Object(r.b)("td",null,Object(r.b)("span",{className:"badge badge--primary"},"Number"))),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("label",null,"max")),Object(r.b)("td",null,"Maximum players for this team, normal players cannot join the team once it reaches this size.",Object(r.b)("br",null),Object(r.b)("i",null,"Premium players may join over this limit until"," ",Object(r.b)("label",null,"max-overfill")," is reached.")),Object(r.b)("td",null,Object(r.b)("span",{className:"badge badge--primary"},"Number"))),Object(r.b)("tr",null,Object(r.b)("td",null,Object(r.b)("label",null,"max-overfill")),Object(r.b)("td",null,"Maximum players hard limit for this team, nobody can join the team once this limit is reached.",Object(r.b)("br",null),Object(r.b)("i",null,"Must be greater than the defined ",Object(r.b)("label",null,"max"),".")),Object(r.b)("td",null,Object(r.b)("span",{className:"badge badge--primary"},"Number")))))),Object(r.b)("pre",null,Object(r.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),'<teams>\n    <team id="red-team" color="dark red" max="50" max-overfill="70">Red</team>\n    <team id="blue-team" color="blue" max="50" max-overfill="70">Blue</team>\n</teams>\n')),Object(r.b)("p",null,"The total maximum number of players in the example given above is 100, however, the max overfill will allow up to 140 players. Servers currently have a player limit of 150, so 100 players in total would allow 50 observers, or 10 observers if teams are at max overfill."))}s.isMDXComponent=!0},228:function(e,t,l){"use strict";l.d(t,"a",(function(){return u})),l.d(t,"b",(function(){return p}));var a=l(0),n=l.n(a);function r(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function b(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function c(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?b(Object(l),!0).forEach((function(t){r(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):b(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function i(e,t){if(null==e)return{};var l,a,n=function(e,t){if(null==e)return{};var l,a,n={},r=Object.keys(e);for(a=0;a<r.length;a++)l=r[a],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)l=r[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var o=n.a.createContext({}),s=function(e){var t=n.a.useContext(o),l=t;return e&&(l="function"==typeof e?e(t):c({},t,{},e)),l},u=function(e){var t=s(e.components);return n.a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var l=e.components,a=e.mdxType,r=e.originalType,b=e.parentName,o=i(e,["components","mdxType","originalType","parentName"]),u=s(l),d=a,p=u["".concat(b,".").concat(d)]||u[d]||m[d]||r;return l?n.a.createElement(p,c({ref:t},o,{components:l})):n.a.createElement(p,c({ref:t},o))}));function p(e,t){var l=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=l.length,b=new Array(r);b[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:a,b[1]=c;for(var o=2;o<r;o++)b[o]=l[o];return n.a.createElement.apply(null,b)}return n.a.createElement.apply(null,l)}d.displayName="MDXCreateElement"}}]);