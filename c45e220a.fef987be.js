(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{210:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return b})),a.d(t,"default",(function(){return o}));var n=a(1),r=a(9),l=(a(0),a(232)),i={id:"variables",title:"Variables"},c={id:"modules/mechanics/variables",title:"Variables",description:"Variables are used to store information that can later be used in a filter.",source:"@site/docs/modules/mechanics/variables.mdx",permalink:"/docs/modules/mechanics/variables",editUrl:"https://github.com/PGMDev/Website/edit/master/docs/modules/mechanics/variables.mdx",sidebar:"Modules",previous:{title:"Actions & Triggers",permalink:"/docs/modules/mechanics/actions-triggers"},next:{title:"Spawns",permalink:"/docs/modules/mechanics/spawns"}},b=[{value:"Variable Element",id:"variable-element",children:[]},{value:"Variable Attributes",id:"variable-attributes",children:[]},{value:"Setting Variables",id:"setting-variables",children:[]},{value:"Using a Variable In a Filter",id:"using-a-variable-in-a-filter",children:[]},{value:"Examples",id:"examples",children:[]}],s={rightToc:b};function o(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(l.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"Variables are used to store information that can later be used in a filter.\nValues are changed using the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/modules/mechanics/actions-triggers"}),"Actions & Triggers")," mechanic.\nAfterwards, they can be used as a ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/modules/mechanics/filters#variable-filter"}),"Filter")," after meeting a certain number or range.\nYou can define as many variables as you want, and all variables must have a scope defined."),Object(l.b)("h3",{id:"variable-element"},"Variable Element"),Object(l.b)("div",{className:"table-container"},Object(l.b)("table",null,Object(l.b)("thead",null,Object(l.b)("tr",null,Object(l.b)("th",null,"Element"),Object(l.b)("th",null,"Description"),Object(l.b)("th",null,"Value/Children"))),Object(l.b)("tbody",null,Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"<variables> </variables>")),Object(l.b)("td",null,"A node containing the variables for this map."),Object(l.b)("td",null,Object(l.b)("span",{className:"badge badge--secondary"},"Variables"))),Object(l.b)("tr",null,Object(l.b)("th",null,"Sub-elements"),Object(l.b)("th",null),Object(l.b)("th",null)),Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"<variable/>")),Object(l.b)("td",null,"An individual variable."),Object(l.b)("td",null,Object(l.b)("span",{className:"badge badge--secondary"},"Variable Attributes")))))),Object(l.b)("h3",{id:"variable-attributes"},"Variable Attributes"),Object(l.b)("div",{className:"table-container"},Object(l.b)("table",null,Object(l.b)("thead",null,Object(l.b)("tr",null,Object(l.b)("th",null,"Element"),Object(l.b)("th",null,"Description"),Object(l.b)("th",null,"Value/Children"))),Object(l.b)("tbody",null,Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"id")),Object(l.b)("td",null,"The ID for the variable."),Object(l.b)("td",null,Object(l.b)("span",{className:"badge badge--primary"},"String"))),Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"scope")),Object(l.b)("td",null,"Defines what the variable will be applied to.",Object(l.b)("br",null),Object(l.b)("span",{className:"badge badge--primary"},"NOTE:"),"Variables scoped to a player will give each player a unique value."),Object(l.b)("td",null,Object(l.b)("label",null,"player"),", ",Object(l.b)("label",null,"team"),", ",Object(l.b)("label",null,"match"))),Object(l.b)("tr",null,Object(l.b)("td",null,Object(l.b)("label",null,"default")),Object(l.b)("td",null,"Sets the initial value of the variable."),Object(l.b)("td",null,Object(l.b)("span",{className:"badge badge--primary"},"Number")))))),Object(l.b)("h3",{id:"setting-variables"},"Setting Variables"),Object(l.b)("p",null,"Setting variables are done inside the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/modules/mechanics/actions-triggers"}),"Actions & Triggers")," mechanic.\nThe ",Object(l.b)("inlineCode",{parentName:"p"},"<set>")," action which changes the variables, waits to be called by a trigger after a filter activates it.\nThe ",Object(l.b)("inlineCode",{parentName:"p"},"value")," attribute can do any basic mathematical expressions."),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Example")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-xml"}),'<actions>\n    <action id="increment-flag-cap" scope="team">\n        \x3c!-- increments the current value by 1 --\x3e\n        <set var="flag_captures" value="flag_captures+1">\n    </action>\n    <trigger filter="flag-cap-filter" action="score-points" scope="player"/>\n</action>\n')),Object(l.b)("p",null,"In this example, the ",Object(l.b)("inlineCode",{parentName:"p"},"flag_captures")," variable will increment by 1 after a player completes ",Object(l.b)("inlineCode",{parentName:"p"},"flag-cap-filter"),"."),Object(l.b)("h3",{id:"using-a-variable-in-a-filter"},"Using a Variable In a Filter"),Object(l.b)("p",null,"The variable can then be used in the ",Object(l.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/modules/mechanics/filters#variable-filter"}),"Variable Filter"),"\nto be utilized in another Action or other module that uses filters.\nThe variable filter can match for a single number or a range of numbers."),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Example")),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-xml"}),'\x3c!-- Match if next_post has a value of 1 --\x3e\n<variable id="next-blue" var="next_post">1</variable>\n\x3c!-- Match if t_score is >= 100 --\x3e\n<variable id="reached-score" var="t_score">[100,oo)</variable>\n\n\x3c!-- Match if t_score is between 5 and 10 (including 5 and 10) --\x3e\n<variable id="reached-score" var="t_score">[5,10]</variable>\n\x3c!-- Match if t_score is between 5 and 10 (excluding 5 and 10) --\x3e\n<variable id="reached-score" var="t_score">(5,10)</variable>\n\x3c!-- Match if t_score is between 0 and 10 (including 0 and excluding 10) --\x3e\n<variable id="reached-score" var="t_score">[0,10)</variable>\n')),Object(l.b)("h3",{id:"examples"},"Examples"),Object(l.b)("p",null,"In this example, when a player first enters ",Object(l.b)("inlineCode",{parentName:"p"},"region-a"),", the team score and later the player score is\nincreased by 5. The second time the same player enters, the team will score an additional 10 points,\nwith the player score continuing to increment by 5. Once the team gets 100 points or higher, a message indicating this will be sent."),Object(l.b)("pre",null,Object(l.b)("code",Object(n.a)({parentName:"pre"},{className:"language-xml"}),'<variables>\n    \x3c!-- Initializes the variables --\x3e\n    <variable id="team_score" scope="team"/>\n    <variable id="player_score" scope="player" default="5"/>\n</variables>\n<actions>\n    <action id="score-points" scope="player"/>\n        \x3c!-- team_score = team_score + player_score --\x3e\n        \x3c!-- Adds the player\'s score to the team score --\x3e\n        <set var="team_score" value="team_score+player_score"/>\n        \x3c!-- Adds 5 points to the player\'s score --\x3e\n        <set var="player_score" value="player_score+5"/>\n    </action>\n    \x3c!-- Triggers the above score-points action when a player enters region-a --\x3e\n    <trigger filter="region-a" action="score-points" scope="player"/>\n    \x3c!-- Sends a message to the team once the filter reached-score passes Allow --\x3e\n    <trigger filter="reached-score" action="completed" scope="team"/>\n    <message id="completed" text="The team reached 100 points!"/>\n</action>\n<filters>\n    \x3c!-- Allows when the t_score variable is greater than or equal to 100 --\x3e\n    <variable id="reached-score" var="t_score">[100,oo)</variable>\n</filters>\n')))}o.isMDXComponent=!0},232:function(e,t,a){"use strict";a.d(t,"a",(function(){return u})),a.d(t,"b",(function(){return m}));var n=a(0),r=a.n(n);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function c(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function b(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),o=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):c({},t,{},e)),a},u=function(e){var t=o(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},p=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,s=b(e,["components","mdxType","originalType","parentName"]),u=o(a),p=n,m=u["".concat(i,".").concat(p)]||u[p]||d[p]||l;return a?r.a.createElement(m,c({ref:t},s,{components:a})):r.a.createElement(m,c({ref:t},s))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=a.length,i=new Array(l);i[0]=p;var c={};for(var b in t)hasOwnProperty.call(t,b)&&(c[b]=t[b]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var s=2;s<l;s++)i[s]=a[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,a)}p.displayName="MDXCreateElement"}}]);