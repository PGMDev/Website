"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9502],{3905:(e,t,l)=>{l.d(t,{Zo:()=>i,kt:()=>m});var n=l(7294);function a(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function o(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){a(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function s(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var u=n.createContext({}),d=function(e){var t=n.useContext(u),l=t;return e&&(l="function"==typeof e?e(t):o(o({},t),e)),l},i=function(e){var t=d(e.components);return n.createElement(u.Provider,{value:t},e.children)},c="mdxType",k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},b=n.forwardRef((function(e,t){var l=e.components,a=e.mdxType,r=e.originalType,u=e.parentName,i=s(e,["components","mdxType","originalType","parentName"]),c=d(l),b=a,m=c["".concat(u,".").concat(b)]||c[b]||k[b]||r;return l?n.createElement(m,o(o({ref:t},i),{},{components:l})):n.createElement(m,o({ref:t},i))}));function m(e,t){var l=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=l.length,o=new Array(r);o[0]=b;var s={};for(var u in t)hasOwnProperty.call(t,u)&&(s[u]=t[u]);s.originalType=e,s[c]="string"==typeof e?e:a,o[1]=s;for(var d=2;d<r;d++)o[d]=l[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,l)}b.displayName="MDXCreateElement"},1045:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>k,frontMatter:()=>r,metadata:()=>s,toc:()=>d});var n=l(7462),a=(l(7294),l(3905));const r={id:"dtc",title:"Destroy the Core"},o=void 0,s={unversionedId:"modules/objectives/dtc",id:"modules/objectives/dtc",title:"Destroy the Core",description:"Players have to locate and break the enemy team's core, usually an obsidian sphere filled with lava.",source:"@site/docs/modules/objectives/dtc.mdx",sourceDirName:"modules/objectives",slug:"/modules/objectives/dtc",permalink:"/docs/modules/objectives/dtc",draft:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/src/docs/modules/objectives/dtc.mdx",tags:[],version:"current",frontMatter:{id:"dtc",title:"Destroy the Core"},sidebar:"docs",previous:{title:"Destroy the Monument",permalink:"/docs/modules/objectives/dtm"},next:{title:"Monument Modes",permalink:"/docs/modules/objectives/monument-modes"}},u={},d=[{value:"Core Attributes",id:"core-attributes",level:5},{value:"Core Sub-elements",id:"core-sub-elements",level:5}],i={toc:d},c="wrapper";function k(e){let{components:t,...l}=e;return(0,a.kt)(c,(0,n.Z)({},i,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Players have to locate and break the enemy team's core, usually an obsidian sphere filled with lava.\nThe lava has to leak down a certain distance for the core to be destroyed.\nLava should not be available anywhere else on the map, otherwise a core leak could be faked.\nThis can also be avoided by keeping the lava far away enough from the core and not giving players buckets or the ability to craft them."),(0,a.kt)("div",{className:"table-container"},(0,a.kt)("table",null,(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Cores Element"),(0,a.kt)("th",null,"Description"),(0,a.kt)("th",null,"Value/Children"))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"<cores> </cores>")),(0,a.kt)("td",null,"Node containing all the defined cores."),(0,a.kt)("td",null)),(0,a.kt)("tr",null,(0,a.kt)("th",null,"Sub-elements"),(0,a.kt)("th",null),(0,a.kt)("th",null)),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"<core> </core>")),(0,a.kt)("td",null,"A single core."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--secondary"},"Core Sub-elements")))))),(0,a.kt)("h5",{id:"core-attributes"},"Core Attributes"),(0,a.kt)("div",{className:"table-container"},(0,a.kt)("table",null,(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Attribute"),(0,a.kt)("th",null,"Description"),(0,a.kt)("th",null,"Value"),(0,a.kt)("th",null,"Default"))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"id")),(0,a.kt)("td",null,"Unique identifier used to reference cores from other places in the XML."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"String")),(0,a.kt)("td",null)),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"name")),(0,a.kt)("td",null,"The core's name, used in notification messages."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"String")),(0,a.kt)("td",null)),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"required")),(0,a.kt)("td",null,"Specify if this objective is required to win the match.",(0,a.kt)("br",null),"Teams completing all of their required objectives will win regardless of score or Blitz configuration."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"true/false")),(0,a.kt)("td",null)),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"region")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--secondary",title:"Can be either this attribute or a sub-element."},"Property"),(0,a.kt)("span",{className:"badge badge--danger"},"Required"),"A region containing the core."),(0,a.kt)("td",null,(0,a.kt)("a",{href:"/docs/modules/mechanics/regions"},"Bounded Region")),(0,a.kt)("td",null)),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"leak")),(0,a.kt)("td",null,"Distance below the bottom of the core ",(0,a.kt)("strong",null,"region")," that the lava must leak."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"Number")),(0,a.kt)("td",null,"5")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"show-progress")),(0,a.kt)("td",null,"Instead of a touch, a % representing how far the core has been leaked is shown. This works similar to destroyables."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"true/false")),(0,a.kt)("td",null,"false")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"material")),(0,a.kt)("td",null,"The core casing material, used to detect breaks, and for mode changes."),(0,a.kt)("td",null,(0,a.kt)("a",{href:"/docs/reference/items/inventory#material_matchers"},"Single Material Pattern")),(0,a.kt)("td",null,"obsidian")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"team")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"Required"),"Team the core belongs to, i.e. its owner."),(0,a.kt)("td",null,(0,a.kt)("a",{href:"/docs/modules/format/teams"},"Team ID")),(0,a.kt)("td",null)),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"modes")),(0,a.kt)("td",null,"Specify which"," ",(0,a.kt)("a",{href:"/docs/modules/objectives/monument-modes"},"monument modes")," ","should be used. Multiple modes are separated with a space."),(0,a.kt)("td",null,(0,a.kt)("a",{href:"/docs/modules/objectives/monument-modes"},"Mode IDs")),(0,a.kt)("td",null,"All modes.")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"mode-changes")),(0,a.kt)("td",null,"Specify if this core uses monument modes.",(0,a.kt)("br",null),(0,a.kt)("label",null,"NOTE:"),"Not used in conjunction with ",(0,a.kt)("label",null,"modes"),"."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"true/false")),(0,a.kt)("td",null,"false")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"show-messages")),(0,a.kt)("td",null,"Broadcast messages related to the core in chat."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"true/false")),(0,a.kt)("td",null,"true")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"show-effects")),(0,a.kt)("td",null,"Play sounds, fireworks and other effects related to the core."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"true/false")),(0,a.kt)("td",null,"true")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"show-info")),(0,a.kt)("td",null,"Display the core under commands such as ",(0,a.kt)("label",null,"/match"),"."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"true/false")),(0,a.kt)("td",null,"true")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"show-sidebar")),(0,a.kt)("td",null,"Displays the core on scoreboard."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"true/false")),(0,a.kt)("td",null,"true")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"stats")),(0,a.kt)("td",null,"Determines if this core counts as a win condition."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"true/false")),(0,a.kt)("td",null,"true")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"show")),(0,a.kt)("td",null,"Specify if the core should be hidden from all visible locations to the player. These locations include chat, the boss bar, and the scoreboard.",(0,a.kt)("br",null),(0,a.kt)("label",null,"NOTE:"),"This attribute sets all five values above to true/false."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"true/false")),(0,a.kt)("td",null,"true")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"proximity-metric")),(0,a.kt)("td",null,"Metric used to determine proximity to the core.",(0,a.kt)("br",null),"Accepts ",(0,a.kt)("label",null,"closest player"),", ",(0,a.kt)("label",null,"closest block"),","," ",(0,a.kt)("label",null,"closest kill")," or ",(0,a.kt)("label",null,"none"),"."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"Proximity Metric")),(0,a.kt)("td",null,(0,a.kt)("label",null,"closest player"))),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"proximity-horizontal")),(0,a.kt)("td",null,"Only calculate horizontal distance for core proximity."),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--primary"},"true/false")),(0,a.kt)("td",null,"false"))))),(0,a.kt)("h5",{id:"core-sub-elements"},"Core Sub-elements"),(0,a.kt)("div",{className:"table-container"},(0,a.kt)("table",null,(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",null,"Element"),(0,a.kt)("th",null,"Description"),(0,a.kt)("th",null,"Value"))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"<region>")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--secondary",title:"Can be either this sub-element or an attribute."},"Property"),(0,a.kt)("span",{className:"badge badge--danger"},"Required"),"A region containing the core."),(0,a.kt)("td",null,(0,a.kt)("a",{href:"/docs/modules/mechanics/regions"},"Bounded Regions")))))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<cores material="obsidian" leak="8">\n    <core team="blue">\n        <region><cuboid min="10,15,12" max="12,13,16"/></region>\n    </core>\n</cores>\n\n<cores material="obsidian" leak="4">\n    <core team="red" region="red-core"/>\n</cores>\n')))}k.isMDXComponent=!0}}]);