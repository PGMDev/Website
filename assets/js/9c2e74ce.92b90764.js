"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[39],{431:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>r,toc:()=>a});var s=t(5893),d=t(1151);const o={id:"monument-modes",title:"Monument Modes"},i=void 0,r={id:"modules/objectives/monument-modes",title:"Monument Modes",description:"This module can be used to customize the modes that cores and destroyables cycle through and at what duration they do so.",source:"@site/docs/modules/objectives/monument-modes.mdx",sourceDirName:"modules/objectives",slug:"/modules/objectives/monument-modes",permalink:"/docs/modules/objectives/monument-modes",draft:!1,unlisted:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/docs/modules/objectives/monument-modes.mdx",tags:[],version:"current",lastUpdatedAt:1716777506e3,frontMatter:{id:"monument-modes",title:"Monument Modes"},sidebar:"docs",previous:{title:"Destroy the Core",permalink:"/docs/modules/objectives/dtc"},next:{title:"Blitz",permalink:"/docs/modules/objectives/blitz"}},l={},a=[{value:"Mode Attributes",id:"mode-attributes",level:4},{value:"Examples",id:"examples",level:2},{value:"Simple Monument Mode Setup",id:"simple-monument-mode-setup",level:3},{value:"Momument Mode with Dynamic Filter",id:"momument-mode-with-dynamic-filter",level:3},{value:"Monument Modes Cycling",id:"monument-modes-cycling",level:3},{value:"Monument Mode Notification",id:"monument-mode-notification",level:3},{value:"Complete Monument Modes Setup",id:"complete-monument-modes-setup",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This module can be used to customize the modes that cores and destroyables cycle through and at what duration they do so.\nWhen a monuments mode changes, its material is usually changed from a hard to a soft block."}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"<modes>"})," tag can contain any number of ",(0,s.jsx)(n.code,{children:"<mode>"})," tags at any duration, even at the same time.\nEach ",(0,s.jsx)(n.code,{children:"<mode>"})," has configurable characteristics that define it."]}),"\n",(0,s.jsxs)("div",{className:"table-container",children:[(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Element"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Value/Children"})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<modes> </modes>"})}),(0,s.jsx)(n.td,{children:"Node containing the monument modes for this match."}),(0,s.jsx)(n.td,{children:(0,s.jsx)("span",{className:"badge badge--secondary",children:"Mode Elements"})})]})})]}),(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Sub-elements"}),(0,s.jsx)(n.th,{}),(0,s.jsx)(n.th,{})]})}),(0,s.jsx)(n.tbody,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"<mode/>"})}),(0,s.jsx)(n.td,{children:"An individual monument mode."}),(0,s.jsx)(n.td,{children:(0,s.jsx)("span",{className:"badge badge--secondary",children:"Mode Attributes"})})]})})]})]}),"\n",(0,s.jsx)(n.h4,{id:"mode-attributes",children:"Mode Attributes"}),"\n",(0,s.jsx)("div",{className:"table-container",children:(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Attribute"}),(0,s.jsx)(n.th,{children:"Description"}),(0,s.jsx)(n.th,{children:"Value"}),(0,s.jsx)(n.th,{children:"Default"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"id"})}),(0,s.jsx)(n.td,{children:"Unique identifier used to reference this mode from other places in the XML."}),(0,s.jsx)(n.td,{children:(0,s.jsx)("span",{className:"badge badge--primary",children:"String"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"name"})}),(0,s.jsx)(n.td,{children:"The custom mode display name, used for the mode change notification."}),(0,s.jsx)(n.td,{children:(0,s.jsx)("span",{className:"badge badge--primary",children:"Formatted Text"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"filter"})}),(0,s.jsx)(n.td,{children:"Filter that triggers mode countdown."}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/modules/mechanics/filters#dynamic-filters",children:"Dynamic Filter"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"material"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)("span",{className:"badge badge--danger",children:"Required"}),"The material the core/destroyable will change to."]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/reference/items/inventory#material-matchers",children:"Single Material Pattern"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"after"})}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)("span",{className:"badge badge--danger",children:"Required"}),"The time from the start of the match until this mode takes effect. If a filter is defined, then it will be the time since the filter passes ",(0,s.jsx)(n.code,{children:"ALLOW"}),"."]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/reference/misc/time-periods",children:"Time Period"})}),(0,s.jsx)(n.td,{})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"show-before"})}),(0,s.jsxs)(n.td,{children:["The time before a mode is transitioning to show it in the boss bar. If ",(0,s.jsx)(n.code,{children:"show-before"})," is set to 0, the mode is not shown in the boss bar at all."]}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.a,{href:"/docs/reference/misc/time-periods",children:"Time Period"})}),(0,s.jsx)(n.td,{children:"1m"})]})]})]})}),"\n",(0,s.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.h3,{id:"simple-monument-mode-setup",children:"Simple Monument Mode Setup"}),"\n",(0,s.jsx)(n.p,{children:"This specifies a mode that will change the material of affected objectives\nto gold blocks after ten minutes of gameplay."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<modes>\n    <mode after="10m" material="gold block"/>\n</modes>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"momument-mode-with-dynamic-filter",children:"Momument Mode with Dynamic Filter"}),"\n",(0,s.jsxs)(n.p,{children:["A mode can be triggered by a dynamic filter when it passes ",(0,s.jsx)(n.code,{children:"ALLOW"})," to PGM.\nIn this case, the ",(0,s.jsx)(n.code,{children:"after"})," attribute means the mode will change in the\ngiven amount of time after the filter changes to ",(0,s.jsx)(n.code,{children:"ALLOW"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'\x3c!-- Turns objectives to emerald blocks 20 seconds after Red Monument and Blue Monument have been destryoed --\x3e\n<modes>\n    <mode after="20s" filter="modes-filter" material="emerald block"/>\n</modes>\n<filters>\n    <all id="modes-filter">\n        <objective>red-mon</objective>\n        <objective>blue-mon</objective>\n    </all>\n</filters>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"monument-modes-cycling",children:"Monument Modes Cycling"}),"\n",(0,s.jsxs)(n.p,{children:["In order for a destroyable or core objective to change modes, it must have ",(0,s.jsx)(n.code,{children:"modes"})," or ",(0,s.jsx)(n.code,{children:'mode-changes="true"'})," in its element tag.\nObjectives with ",(0,s.jsx)(n.code,{children:"mode-changes"})," enabled will cycle through all modes, regardless if the mode has an ID."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<destroyables name="Monument" materials="obsidian">\n    <destroyable owner="red" mode-changes="true">\n        <region>\n            <cuboid min="46,16,26" max="45,14,25"/>\n        </region>\n    </destroyable>\n    \x3c!-- destroyable is already affected by modes listed --\x3e\n</destroyable>\n<cores>\n    <core team="red" modes="gold-mode sandstone-mode glass-mode">\n        <region>\n            <cuboid min="10,15,12" max="12,13,16"/>\n        </region>\n    </core>\n</cores>\n<modes>\n    <mode after="5m" material="gold block" id="gold-mode"/>\n    <mode after="10m" material="sandstone" id="sandstone-mode"/>\n    <mode after="15m" material="glass" id="glass-mode"/>\n</modes>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"monument-mode-notification",children:"Monument Mode Notification"}),"\n",(0,s.jsxs)(n.p,{children:["This shows a mode that will change the material of enabled objectives to\ncoal blocks after ten minutes of gameplay. The following text, ",(0,s.jsx)(n.code,{children:"> > > EASY MODE < < <"}),"\nwill displayed in the boss bar in yellow."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<modes>\n    <mode after="5m" material="coal block" name="`eEASY MODE"/>\n</modes>\n'})}),"\n",(0,s.jsx)(n.h3,{id:"complete-monument-modes-setup",children:"Complete Monument Modes Setup"}),"\n",(0,s.jsxs)(n.p,{children:["In this example, the two cores and the two monuments turn to glass in ten minutes, and the two cores will turn to gold in fifteen minutes.\nEnabling an objective's ",(0,s.jsx)(n.code,{children:"mode-changes"})," attribute is not necessary in this case."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-xml",children:'<cores modes="glass-mode gold-mode">\n    <core team="red-team" region="red-core"/>\n    <core team="blue-team" region="blu-core"/>\n</cores>\n<destroyables materials="obsidian" modes="glass-mode">\n    <destroyable owner="red-team" region="mon-red" name="Red Monument"/>\n    <destroyable owner="blue-team" region="mon-blu" name="Blue Monument"/>\n</destroyables>\n<modes>\n    <mode id="glass-mode" after="10m" material="glass" name="`fGlass Mode"/>\n    <mode id="gold-mode" after="15m" material="gold block" name="`6Gold Mode"/>\n</modes>\n'})})]})}function m(e={}){const{wrapper:n}={...(0,d.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>i});var s=t(7294);const d={},o=s.createContext(d);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);