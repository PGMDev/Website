"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9060],{9883:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>d,toc:()=>a});var t=n(5893),r=n(1151);const i={id:"mobs",title:"Mob Spawning"},l=void 0,d={id:"modules/environment/mobs",title:"Mob Spawning",description:"By default, PGM disables all mob spawning. The mobs module allows this behavior to be customized to allow spawning of specific mobs.",source:"@site/docs/modules/environment/mobs.mdx",sourceDirName:"modules/environment",slug:"/modules/environment/mobs",permalink:"/docs/modules/environment/mobs",draft:!1,unlisted:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/docs/modules/environment/mobs.mdx",tags:[],version:"current",lastUpdatedAt:1716777506e3,frontMatter:{id:"mobs",title:"Mob Spawning"},sidebar:"docs",previous:{title:"World Border",permalink:"/docs/modules/environment/border"},next:{title:"Players (free-for-all)",permalink:"/docs/modules/format/players"}},o={},a=[{value:"Mob Spawning Filter Matchers",id:"mob-spawning-filter-matchers",level:5},{value:"Examples",id:"examples",level:3}];function c(e){const s={a:"a",code:"code",h3:"h3",h5:"h5",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:["By default, PGM disables all mob spawning. The mobs module allows this behavior to be customized to allow spawning of specific mobs.\nThis module makes use of the ",(0,t.jsxs)(s.a,{href:"/docs/modules/mechanics/filters#entity-filters",children:[(0,t.jsx)(s.code,{children:"<spawn>"}),", ",(0,t.jsx)(s.code,{children:"<mob>"})," and ",(0,t.jsx)(s.code,{children:"<entity>"})," filters"]})," to only allow specific mobs to spawn.\nMob spawns can also be filtered against any other filter type, including regions."]}),"\n",(0,t.jsxs)("div",{className:"table-container",children:[(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Element"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"<mobs> </mobs>"})}),(0,t.jsx)(s.td,{children:"Node containing the custom mob spawning filters."})]})})]}),(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Attributes"}),(0,t.jsx)(s.th,{}),(0,t.jsx)(s.th,{children:"Value/Children"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"filter"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)("span",{className:"badge badge--secondary",title:"Can be either this sub-element or an attribute.",children:"Property"}),(0,t.jsx)("span",{className:"badge badge--danger",children:"Required"}),"Filter what mobs can spawn when and where."]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/docs/modules/mechanics/filters",children:"Filters"})})]})})]}),(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Sub-elements"}),(0,t.jsx)(s.th,{}),(0,t.jsx)(s.th,{})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"<filter> </filter>"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)("span",{className:"badge badge--secondary",title:"Can be either this sub-element or an attribute.",children:"Property"}),(0,t.jsx)("span",{className:"badge badge--danger",children:"Required"}),"Filter what mobs can spawn when and where."]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/docs/modules/mechanics/filters",children:"Filters"})})]})})]})]}),"\n",(0,t.jsx)(s.h5,{id:"mob-spawning-filter-matchers",children:"Mob Spawning Filter Matchers"}),"\n",(0,t.jsx)("div",{className:"table-container",children:(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Element"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Value"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"<spawn> </spawn>"})}),(0,t.jsx)(s.td,{children:"Filter the reason a mob is being spawned."}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/docs/reference/entities/spawn-reasons",children:"Spawn Reason"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"<mob> </mob>"})}),(0,t.jsx)(s.td,{children:"The mob to filter for."}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/docs/reference/entities/entity-types#creature-types",children:"Creature Type"})})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"<entity> </entity>"})}),(0,t.jsx)(s.td,{children:"The entity to filter for."}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/docs/reference/entities/entity-types",children:"Entity Type"})})]})]})]})}),"\n",(0,t.jsx)(s.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-xml",children:"\x3c!-- Only allow mobs to spawn from monster spawners. --\x3e\n<mobs>\n    <filter>\n        <spawn>spawner</spawn>\n    </filter>\n</mobs>\n\n\x3c!-- Only allow cave spiders spawned with spawn eggs --\x3e\n<mobs>\n    <filter>\n        <all>\n            <mob>cave spider</mob>\n            <spawn>spawner egg</spawn>\n        </all>\n    </filter>\n</mobs>\n"})})]})}function h(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>d,a:()=>l});var t=n(7294);const r={},i=t.createContext(r);function l(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(i.Provider,{value:s},e.children)}}}]);