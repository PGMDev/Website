"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1061],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>u});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=c(r),u=a,h=d["".concat(s,".").concat(u)]||d[u]||p[u]||o;return r?n.createElement(h,l(l({ref:t},m),{},{components:r})):n.createElement(h,l({ref:t},m))}));function u(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3781:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=r(7462),a=(r(7294),r(3905));const o={id:"other",title:"Other Gamemodes"},l=void 0,i={unversionedId:"modules/objectives/other",id:"modules/objectives/other",title:"Other Gamemodes",description:"Team Death-match",source:"@site/docs/modules/objectives/other.mdx",sourceDirName:"modules/objectives",slug:"/modules/objectives/other",permalink:"/docs/modules/objectives/other",draft:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/src/docs/modules/objectives/other.mdx",tags:[],version:"current",frontMatter:{id:"other",title:"Other Gamemodes"},sidebar:"docs",previous:{title:"Scoring",permalink:"/docs/modules/objectives/scoring"},next:{title:"Payload (Experimental)",permalink:"/docs/modules/objectives/payload"}},s={},c=[{value:"Team Death-match",id:"team-death-match",level:3},{value:"Free-For-All",id:"free-for-all",level:3},{value:"Rage",id:"rage",level:3}],m={toc:c};function p(e){let{components:t,...r}=e;return(0,a.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"team-death-match"},"Team Death-match"),(0,a.kt)("p",null,"This gamemode uses the ",(0,a.kt)("a",{parentName:"p",href:"/docs/modules/objectives/scoring"},"scoring")," module to run the game for a specified amount of time, after which the team with the highest score wins. Teams increase their score by killing players from the other team or capturing points from a ",(0,a.kt)("a",{parentName:"p",href:"/docs/modules/objectives/scoring#score_box"},"score box"),"."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"NOTE:")," To be able to score points for kills and deaths the ",(0,a.kt)("inlineCode",{parentName:"p"},"<kills>")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"<deaths>")," elements are required."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<score>\n    <kills>1</kills>    \x3c!-- +1 points for a kill --\x3e\n    <deaths>1</deaths>  \x3c!-- -1 points for dying --\x3e\n</score>\n\n\x3c!-- Time till the match ends in seconds (10 minutes) --\x3e\n<time>600</time>\n")),(0,a.kt)("h3",{id:"free-for-all"},"Free-For-All"),(0,a.kt)("p",null,"The FFA gamemode uses the ",(0,a.kt)("a",{parentName:"p",href:"/docs/modules/format/players"},"players")," instead of the ",(0,a.kt)("a",{parentName:"p",href:"/docs/modules/format/teams"},"teams")," module to create a team-less match.\nDepending on the modules used, players can increase their score by killing other players until a score or time limit is reached or by capturing objectives, etc."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"NOTE:")," To be able to score points for kills and deaths the ",(0,a.kt)("inlineCode",{parentName:"p"},"<kills>")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"<deaths>")," elements are required."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},'<players max="16" max-overfill="20"/>\n<time>8m</time>\n\n<score>\n    <kills>1</kills>\n    <deaths>1</deaths>\n</score>\n')),(0,a.kt)("h3",{id:"rage"},"Rage"),(0,a.kt)("p",null,"Enable the one hit kill, rage style gamemode."),(0,a.kt)("p",null,"One hit kills will only be applied to items that have a sharpness enchantment greater than level 1. One shot arrow kills will only be applied to bows that have a power enchantment greater than level 1."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"NOTE:")," This module must be used in conjunction with another gamemode."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-xml"},"<rage/>\n\n<time>8m</time>\n<score>\n    <limit>15</limit>\n</score>\n")))}p.isMDXComponent=!0}}]);