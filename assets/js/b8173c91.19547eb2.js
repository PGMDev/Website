"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9060],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>b});var l=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,r=function(e,t){if(null==e)return{};var n,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=l.createContext({}),u=function(e){var t=l.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return l.createElement(i.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},d=l.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,i=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,b=p["".concat(i,".").concat(d)]||p[d]||m[d]||a;return n?l.createElement(b,o(o({ref:t},c),{},{components:n})):l.createElement(b,o({ref:t},c))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s[p]="string"==typeof e?e:r,o[1]=s;for(var u=2;u<a;u++)o[u]=n[u];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8728:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var l=n(7462),r=(n(7294),n(3905));const a={id:"mobs",title:"Mob Spawning"},o=void 0,s={unversionedId:"modules/environment/mobs",id:"modules/environment/mobs",title:"Mob Spawning",description:"By default, PGM disables all mob spawning.",source:"@site/docs/modules/environment/mobs.mdx",sourceDirName:"modules/environment",slug:"/modules/environment/mobs",permalink:"/docs/modules/environment/mobs",draft:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/src/docs/modules/environment/mobs.mdx",tags:[],version:"current",frontMatter:{id:"mobs",title:"Mob Spawning"},sidebar:"docs",previous:{title:"World Border",permalink:"/docs/modules/environment/border"},next:{title:"Players (free-for-all)",permalink:"/docs/modules/format/players"}},i={},u=[{value:"Mob Spawning Filter Matchers",id:"mob-spawning-filter-matchers",level:5}],c={toc:u},p="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,l.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"By default, PGM disables all mob spawning.\nThe mobs module allows this behavior to be customized to allow spawning of specific mobs.\nThis module makes use of the ",(0,r.kt)("inlineCode",{parentName:"p"},"<spawn>"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"<mob>")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"<entity>")," ",(0,r.kt)("a",{parentName:"p",href:"/docs/modules/mechanics/filters"},"filters")," to only allow specific mobs to spawn.\nMob spawns can also be filtered against any other filter type including regions."),(0,r.kt)("div",{className:"table-container"},(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Element"),(0,r.kt)("th",null,"Description"),(0,r.kt)("th",null,"Value/Children"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("label",null,"<mobs> </mobs>")),(0,r.kt)("td",{colspan:"2"},"Node containing the custom mob spawning filters.")),(0,r.kt)("tr",null,(0,r.kt)("th",null,"Attributes"),(0,r.kt)("th",null),(0,r.kt)("th",null)),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("label",null,"filter")),(0,r.kt)("td",null,(0,r.kt)("span",{className:"badge badge--secondary",title:"Can be this attribute or a sub-element."},"Property"),(0,r.kt)("span",{className:"badge badge--danger"},"Required"),"Filter what mobs can spawn when and where."),(0,r.kt)("td",null,(0,r.kt)("a",{href:"/docs/modules/mechanics/filters"},"Filter"))),(0,r.kt)("tr",null,(0,r.kt)("th",null,"Sub-elements"),(0,r.kt)("th",null),(0,r.kt)("th",null)),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("label",null,"<filter> </filter>")),(0,r.kt)("td",null,(0,r.kt)("span",{className:"badge badge--secondary",title:"Can be either this sub-element or an attribute."},"Property"),(0,r.kt)("span",{className:"badge badge--danger"},"Required"),"Filter what mobs can spawn when and where."),(0,r.kt)("td",null,(0,r.kt)("a",{href:"/docs/modules/mechanics/filters"},"Filter")))))),(0,r.kt)("h5",{id:"mob-spawning-filter-matchers"},"Mob Spawning Filter Matchers"),(0,r.kt)("div",{className:"table-container"},(0,r.kt)("table",null,(0,r.kt)("thead",null,(0,r.kt)("tr",null,(0,r.kt)("th",null,"Element"),(0,r.kt)("th",null,"Description"),(0,r.kt)("th",null,"Value"))),(0,r.kt)("tbody",null,(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("label",null,"<spawn> </spawn>")),(0,r.kt)("td",null,"Filter the reason a mob is being spawned."),(0,r.kt)("td",null,(0,r.kt)("a",{href:"/docs/reference/entities/spawn-reasons"},"Spawn Reason"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("label",null,"<mob> </mob>")),(0,r.kt)("td",null,"The mob to filter for."),(0,r.kt)("td",null,(0,r.kt)("a",{href:"/docs/reference/entities/entity-types#creatures"},"Creature Type"))),(0,r.kt)("tr",null,(0,r.kt)("td",null,(0,r.kt)("label",null,"<entity> </entity>")),(0,r.kt)("td",null,"The entity to filter for."),(0,r.kt)("td",null,(0,r.kt)("a",{href:"/docs/reference/entities/entity-types"},"Entity Type")))))),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"Examples")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},"\x3c!-- Only allow mobs to spawn from monster spawners. --\x3e\n<mobs>\n    <filter>\n        <spawn>spawner</spawn>\n    </filter>\n</mobs>\n\n\x3c!-- Only allow cave spiders spawned with spawn eggs --\x3e\n<mobs>\n    <filter>\n        <all>\n            <mob>cave spider</mob>\n            <spawn>spawner egg</spawn>\n        </all>\n    </filter>\n</mobs>\n")))}m.isMDXComponent=!0}}]);