"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2260],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=m(n),h=o,u=d["".concat(s,".").concat(h)]||d[h]||p[h]||r;return n?a.createElement(u,l(l({ref:t},c),{},{components:n})):a.createElement(u,l({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,l=new Array(r);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var m=2;m<r;m++)l[m]=n[m];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1535:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>m});var a=n(7462),o=(n(7294),n(3905));const r={id:"race-for-victory",title:"Race for Victory (CTW)"},l=void 0,i={unversionedId:"examples/race-for-victory",id:"examples/race-for-victory",title:"Race for Victory (CTW)",description:"Race for Victory is a Capture The Wool map where you need to retrive the wool from the enemy side.",source:"@site/docs/examples/race-for-victory.mdx",sourceDirName:"examples",slug:"/examples/race-for-victory",permalink:"/docs/examples/race-for-victory",draft:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/src/docs/examples/race-for-victory.mdx",tags:[],version:"current",frontMatter:{id:"race-for-victory",title:"Race for Victory (CTW)"},sidebar:"Examples",previous:{title:"Ozone FFA",permalink:"/docs/examples/ozone"},next:{title:"The Fenland (DTM)",permalink:"/docs/examples/the-fenland"}},s={},m=[],c={toc:m};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Race for Victory is a Capture The Wool map where you need to retrive the wool from the enemy side.\nPlayers can build, bridge and tunnel their way through enemy lines and other obsticles.\nAfter retrieving the wool, they must make their way back without getting killed by enemies still guarding the\nwools."),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Source: ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/MCResourcePile/overcast-maps/tree/master/maps/race_for_victory"},"Race for Victory")," by ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/Plastix"},"Plastix"),",\n",(0,o.kt)("a",{parentName:"em",href:"https://github.com/tonybruess"},"MonsieurApple"),", and ",(0,o.kt)("a",{parentName:"em",href:"https://github.com/steveanton"},"Anxuiz"),".\n",(0,o.kt)("img",{src:n(1097).Z,width:"2060",height:"1005"}),"_","Floating lava blocks let you fire flaming arrows if you shoot through them, which can burn enemies.")),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(9991).Z,width:"2060",height:"1005"}),"\n",(0,o.kt)("em",{parentName:"p"},"Cacti and lava await enemies that might get into the woolrooms.")),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(9758).Z,width:"2060",height:"1005"}),"\n",(0,o.kt)("em",{parentName:"p"},'Boundaries are marked with redstone, which tells players if they are "safe".\nIn this picture, the red team cannot stand or build past the redstone line. They must stop\nthe Blue team from entering!')),(0,o.kt)("p",null,(0,o.kt)("img",{src:n(7564).Z,width:"2060",height:"1005"}),"\n",(0,o.kt)("em",{parentName:"p"},"The wool room features useful tools like speed potions, better armour (along with the wool incased in glass)\nto help their way back to base!")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/modules/general/main"},(0,o.kt)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nEvery map XML file starts with the XML header and then the base ",(0,o.kt)("inlineCode",{parentName:"p"},"<map>")," module."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<?xml version="1.0"?>\n<map proto="1.4.2">\n\x3c!-- Specifies what the map is called --\x3e\n<name>Race for Victory</name>\n\x3c!-- States what version the map is --\x3e\n<version>1.2.3</version>\n\x3c!-- Tells the teams what the objective is in order to win the game --\x3e\n<objective>Take the enemy\'s wool located to either side of the enemy\'s base and place it in your victory monument.</objective>\n\x3c!-- States who made the map --\x3e\n<authors>\n    <author uuid="ef4ea031-998f-4ec9-b7b6-1bdd428bcef8" contribution="map design"/> \x3c!-- Plastix --\x3e\n    <author uuid="3c7db14d-ac4b-4e35-b2c6-3b2237f382be" contribution="map design and gameplay management"/> \x3c!-- MonsieurApple --\x3e\n    <author uuid="25961a08-c90c-4abd-b136-dad90e89c2eb" contribution="item management"/> \x3c!-- Anxuiz --\x3e\n</authors>\n\x3c!-- Shows any map rules or details that are not in normal server rules --\x3e\n<rules>\n    <rule>Players may not obstruct the wool rooms with lava or obsidian.</rule>\n    <rule>Players may not obstruct the majority of the lane with lava or obsidian.</rule>\n    <rule>Players may not use lava or obsidian to block a team\'s spawn.</rule>\n    <rule>Players may not venture below the bottom bedrock layer of the map.</rule>\n</rules>\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/modules/format/teams"},(0,o.kt)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nDefines the team's ",(0,o.kt)("a",{parentName:"p",href:"/docs/reference/misc/formatting#chatColors"},"colors"),", names and how many people can be on the teams."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<teams>\n    <team color="blue" max="12" max-overfill="18">Blue</team>\n    <team color="dark red" max="12" max-overfill="18">Red</team>\n</teams>\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/modules/mechanics/spawns"},(0,o.kt)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nSpecify where the previously defined teams will spawn, the kit they will spawn with and what direction they face."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<spawns>\n    <spawn team="blue" yaw="180" kit="blue">\n        <region>\n            <cuboid min="-1.5,68,108.5" max="1.5,68,110.5"/>\n        </region>\n    </spawn>\n    <spawn team="red" yaw="0" kit="red">\n        <region>\n            <cuboid min="-1.5,68,-111.5" max="1.5,68,-108.5"/>\n        </region>\n    </spawn>\n    <default yaw="90">\n        <region>\n            <cylinder base="-80,70,0" radius="3" height="0"/>\n        </region>\n    </default>\n</spawns>\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/modules/gear/kits"},(0,o.kt)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nDefines the spawn kits that each player gets."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<kits>\n    <kit id="spawn">\n        <item slot="0">iron sword</item>\n        <item slot="1">bow</item>\n        <item slot="28" amount="64">arrow</item>\n        <item slot="2">iron pickaxe</item>\n        <item slot="3">iron axe</item>\n        <item slot="4" damage="1" amount="64">wood</item>\n        <item slot="5" amount="64">ladder</item>\n        <item slot="8" amount="64">bread</item>\n    </kit>\n    <kit id="red" parents="spawn">\n        <helmet color="cd0000">leather helmet</helmet>\n        <chestplate color="cd0000">leather chestplate</chestplate>\n        <leggings color="cd0000">leather leggings</leggings>\n        <boots color="cd0000">leather boots</boots>\n    </kit>\n    <kit id="blue" parents="spawn">\n        <helmet color="0066cc">leather helmet</helmet>\n        <chestplate color="0066cc">leather chestplate</chestplate>\n        <leggings color="0066cc">leather leggings</leggings>\n        <boots color="0066cc">leather boots</boots>\n    </kit>\n</kits>\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/modules/mechanics/filters"},(0,o.kt)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nDefines the filters on the map and determines which events are allowed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<filters>\n    <all id="only-blue">\n        <team>blue</team>\n    </all>\n    <all id="only-red">\n        <team>red</team>\n    </all>\n    \x3c!-- Only let Red team open chests at their spawn --\x3e\n    <all id="only-red-usage">\n        <not>\n            <all>\n                <any>\n                    <block>chest</block>\n                    <block>workbench</block>\n                </any>\n                <team>blue</team>\n            </all>\n        </not>\n    </all>\n    \x3c!-- Only let Blue team open chests at their spawn --\x3e\n    <all id="only-blue-usage">\n        <not>\n            <all>\n                <any>\n                    <block>chest</block>\n                    <block>workbench</block>\n                </any>\n                <team>red</team>\n            </all>\n        </not>\n    </all>\n</filters>\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/modules/mechanics/regions"},(0,o.kt)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nDefines regions that can be later used to apply spawns, filters, etc"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<regions>\n    \x3c!-- Blue wool room protection (these are the wools blue has to get) --\x3e\n    <union id="blue-wool-rooms">\n        <rectangle id="purple-room" min="-25,-80" max="-oo,-oo"/>\n        <rectangle id="yellow-room" min="25,-80" max="oo,-oo"/>\n    </union>\n    \x3c!-- Only Blue team can open chests inside the Blue wool rooms --\x3e\n    <apply block="only-blue" use="only-blue-usage">\n        <region id="blue-wool-rooms"/>\n    </apply>\n    \x3c!-- Red team can\'t enter the wool rooms they have to defend --\x3e\n    <apply enter="only-blue" message="You may not enter your own wool room!">\n        <region id="blue-wool-rooms"/>\n    </apply>\n    \x3c!-- Red wool room protection (these are the wools red has to get) --\x3e\n    <union id="red-wool-rooms">\n        <rectangle id="lime-room" min="25,80" max="oo,oo"/>\n        <rectangle id="orange-room" min="-25,80" max="-oo,oo"/>\n    </union>\n    \x3c!-- Only Red team can open chests inside the Blue wool rooms --\x3e\n    <apply block="only-red" use="only-red-usage">\n        <region id="red-wool-rooms"/>\n    </apply>\n    \x3c!-- Blue team can\'t enter the wool rooms they have to defend --\x3e\n    <apply enter="only-red" message="You may not enter your own wool room!">\n        <region id="red-wool-rooms"/>\n    </apply>\n    \x3c!-- Prevent teams from entering each other\'s spawns --\x3e\n    <rectangle id="red-base" min="-13,-oo" max="13,-97"/>\n    <rectangle id="blue-base" min="-13,97" max="13,oo"/>\n    \x3c!-- Only the Red Team can enter the Red Spawn --\x3e\n    <apply enter="only-red" message="You may not enter red\'s base!">\n        <region id="red-base"/>\n    </apply>\n    \x3c!-- Only the Red Team can can place and break blocks inside the Red Spawn --\x3e\n    <apply block="only-red">\n        <region id="red-base"/>\n    </apply>\n    \x3c!-- Only the Blue Team can enter the Blue Spawn --\x3e\n    <apply enter="only-blue" message="You may not enter blue\'s base!">\n        <region id="blue-base"/>\n    </apply>\n    \x3c!-- Only the Blue Team can can place and break blocks inside the Blue Spawn --\x3e\n    <apply block="only-blue">\n        <region id="blue-base"/>\n    </apply>\n    \x3c!-- Prevent void bridging (building out of bounds) --\x3e\n    <apply block="never" message="You may not build in the void!">\n        <complement>\n            <union>\n                <rectangle min="-13,-90" max="-oo,90"/>\n                <rectangle min="13,-90" max="oo,90"/>\n            </union>\n            <rectangle min="-oo,15" max="oo,-15"/>\n        </complement>\n        \x3c!-- Behind red\'s wool rooms --\x3e\n        <rectangle min="42,-101" max="13,-112"/>\n        <rectangle min="-42,-101" max="-13,-112"/>\n        \x3c!-- Behind blue\'s wool rooms --\x3e\n        <rectangle min="13,111" max="42,101"/>\n        <rectangle min="-13,111" max="-42,101"/>\n    </apply>\n    <apply block="never" message="You may not edit blocks in this area!">\n        \x3c!-- This is the inverse of the rectangle region (everything outside of the rectangle) --\x3e\n        <negative>\n            <rectangle min="-57,-123" max="57,123"/>\n        </negative>\n        <cylinder base="0,67,-110" height="4" radius="3"/>\n        <cylinder base="0,67,110" height="4" radius="3"/>\n    </apply>\n</regions>\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/modules/environment/world/#build-height"},(0,o.kt)("i",{className:"icon-right"},"\u27a1\ufe0f"))),(0,o.kt)("p",null,"This specifies how high players can build however it doesn't stop them from going over this limit."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"<maxbuildheight>100</maxbuildheight>\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/modules/objectives/ctw"},(0,o.kt)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nThis specifies wools each team needs to get, and where to place them."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<wools>\n    \x3c!-- Blue team must get and place the Purple and Yellow wools to win --\x3e\n    <wool team="blue" color="purple">\n        \x3c!-- Location where the Blue team must place the Purple Wool --\x3e\n        <block location="-1,75,97"/>\n    </wool>\n    <wool team="blue" color="yellow">\n        <block location="0,75,97"/>\n    </wool>\n    \x3c!-- Red team must get and place the Lime and Orange wools to win --\x3e\n    <wool team="red" color="lime">\n        <block location="0,75,-98"/>\n    </wool>\n    <wool team="red" color="orange">\n        <block location="-1,75,-98"/>\n    </wool>\n</wools>\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/modules/gear/kill-rewards"},(0,o.kt)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nGive players a golden apple, sixteen arrows and 8 oak wood logs after killing a player."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<killreward>\n    <item>golden apple</item>\n    <item amount="16">arrow</item>\n    <item damage="1" amount="8">wood</item>\n</killreward>\n')),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/modules/gear/repair-remove-keep"},(0,o.kt)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nWe don't want an excessive amount of items dropped on the map, so this allows us to manage\nhow to deal with dropped items more easily."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"\x3c!-- These items will drop, players that already have these items can pick it up and will be merged --\x3e\n<toolrepair>\n    <tool>iron sword</tool>\n    <tool>bow</tool>\n    <tool>iron pickaxe</tool>\n    <tool>iron axe</tool>\n</toolrepair>\n\x3c!-- All of these items will be automatically removed when dropped --\x3e\n<itemremove>\n    <item>leather helmet</item>\n    <item>leather chestplate</item>\n    <item>leather leggings</item>\n    <item>leather boots</item>\n    <item>arrow</item>\n    <item>wood</item>\n    <item>log</item>\n    <item>ladder</item>\n    <item>bread</item>\n    <item>golden apple</item>\n</itemremove>\n")),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"/docs/modules/general/main"},(0,o.kt)("i",{className:"icon-right"},"\u27a1\ufe0f")),"\nClose the main ",(0,o.kt)("inlineCode",{parentName:"p"},"<map>")," module."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},"</map>\n")))}p.isMDXComponent=!0},1097:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rfv1-eaeed77c1fe38a1c6da1d6c6669b7461.png"},9991:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rfv2-b4eaaf1181f1db5bcbaf860197a49a68.png"},9758:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rfv3-7fde3dc2ccc019e17635967ced78eef8.png"},7564:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/rfv4-2841a20af6fe44710b726b71f3b2bc08.png"}}]);