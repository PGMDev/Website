"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[362],{1698:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>d,metadata:()=>l,toc:()=>r});var t=n(5893),i=n(1151);const d={id:"consumables",title:"Consumables"},c=void 0,l={id:"modules/gear/consumables",title:"Consumables",description:'Consumables are items that can be made "edible" to the player and "consuming" it will allow them to run an action or receive a kit.',source:"@site/docs/modules/gear/consumables.mdx",sourceDirName:"modules/gear",slug:"/modules/gear/consumables",permalink:"/docs/modules/gear/consumables",draft:!1,unlisted:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/docs/modules/gear/consumables.mdx",tags:[],version:"current",lastUpdatedAt:1724740491e3,frontMatter:{id:"consumables",title:"Consumables"},sidebar:"docs",previous:{title:"Custom Projectiles",permalink:"/docs/modules/gear/projectiles"},next:{title:"TNT",permalink:"/docs/modules/gear/tnt"}},a={},r=[{value:"Consumables Element",id:"consumables-element",level:4},{value:"Consumable Attributes",id:"consumable-attributes",level:4},{value:"Override &amp; Consume Behavior",id:"override--consume-behavior",level:3},{value:"Examples",id:"examples",level:3}];function o(e){const s={a:"a",code:"code",em:"em",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(s.p,{children:['Consumables are items that can be made "edible" to the player and "consuming" it will allow them to run an action or receive a kit.\nIt can be defined and applied to items in ',(0,t.jsx)(s.a,{href:"/docs/modules/gear/kits",children:"kits"}),".\nWhen consumed, these items can trigger ",(0,t.jsx)(s.a,{href:"/docs/modules/mechanics/actions-triggers",children:"actions"}),", and override vanilla eating or drinking behavior."]}),"\n",(0,t.jsx)(s.h4,{id:"consumables-element",children:"Consumables Element"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Element"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"<consumables> </consumables>"})}),(0,t.jsx)(s.td,{children:"Node containing the consumables definitions."})]})})]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Sub-elements"}),(0,t.jsx)(s.th,{})]})}),(0,t.jsx)(s.tbody,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"<consumable> </consumable>"})}),(0,t.jsx)(s.td,{children:"An individual consumable."})]})})]}),"\n",(0,t.jsx)(s.h4,{id:"consumable-attributes",children:"Consumable Attributes"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Attribute"}),(0,t.jsx)(s.th,{children:"Description"}),(0,t.jsx)(s.th,{children:"Value"}),(0,t.jsx)(s.th,{children:"Default"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"id"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)("span",{className:"badge badge--danger",children:"Required"}),"Unique identifier used to reference this consumable from other places in the XML."]}),(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"badge badge--primary",children:"String"})}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"action"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)("span",{className:"badge badge--danger",children:"Required"}),"Run the specified action upon consumption."]}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"/docs/modules/mechanics/actions-triggers",children:"Action ID"})}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"on"})}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)("span",{className:"badge badge--danger",children:"Required"}),"Specify how the consumable should be used."]}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.code,{children:"eat"}),(0,t.jsx)("br",{}),(0,t.jsx)(s.code,{children:"right click"}),(0,t.jsx)("br",{}),(0,t.jsx)(s.code,{children:"left click"}),(0,t.jsx)("br",{}),(0,t.jsx)(s.code,{children:"click"})," (both)"]}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"override"})}),(0,t.jsxs)(s.td,{children:["The consumable is affected by vanilla behaviors, such as giving the player potion effects.",(0,t.jsx)("br",{}),(0,t.jsx)(s.em,{children:"This is useful when using potion bottles and golden apples as the consumable item."})]}),(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"badge badge--primary",children:"true/false"})}),(0,t.jsx)(s.td,{children:"true"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"consume"})}),(0,t.jsxs)(s.td,{children:["PGM will consume the item once per use for the user.",(0,t.jsx)("br",{}),(0,t.jsx)(s.strong,{children:"Note:"})," This attribute is ignored if the value of ",(0,t.jsx)(s.code,{children:"on"})," attribute is ",(0,t.jsx)(s.code,{children:"eat"}),"."]}),(0,t.jsx)(s.td,{children:(0,t.jsx)("span",{className:"badge badge--primary",children:"true/false"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"#override--consume-behavior",children:"*"})})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"override--consume-behavior",children:"Override & Consume Behavior"}),"\n",(0,t.jsxs)(s.p,{children:["Some combinations of ",(0,t.jsx)(s.code,{children:"override"})," and ",(0,t.jsx)(s.code,{children:"consume"})," values can lead to unexpected behaviors involving either\nthe user's client or PGM itself. This chart outlines the expected vanilla behavior for each configuration."]}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Override"}),(0,t.jsx)(s.th,{children:"Consume"}),(0,t.jsx)(s.th,{children:"Vanilla Behavior"}),(0,t.jsx)(s.th,{children:"Result"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"No consume (e.g.: stick)"}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)("span",{className:"badge badge--success",children:"Optimal"}),"0 used"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"Consumes (e.g.: snowball)"}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)("span",{className:"badge badge--warning",children:"Sub-optimal"}),"1 used"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"true"})}),(0,t.jsx)(s.td,{children:"No consume (e.g.: stick)"}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)("span",{className:"badge badge--success",children:"Optimal"}),"1 used"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"true"})}),(0,t.jsx)(s.td,{children:"Consumes (e.g.: snowball)"}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)("span",{className:"badge badge--danger",children:"Invalid"}),"2 used"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"true"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"false"})}),(0,t.jsx)(s.td,{children:"Any case"}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)("span",{className:"badge badge--success",children:"Optimal"}),"0 used"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"true"})}),(0,t.jsx)(s.td,{children:(0,t.jsx)(s.code,{children:"true"})}),(0,t.jsx)(s.td,{children:"Any case"}),(0,t.jsxs)(s.td,{children:[(0,t.jsx)("span",{className:"badge badge--success",children:"Optimal"}),"1 used"]})]})]})]}),"\n",(0,t.jsx)(s.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-xml",children:'\x3c!-- Create the consumable "porkchop-that-says-yum" --\x3e\n<consumables>\n    <consumable id="porkchop-that-says-yum" action="say-yum" on="eat" override="false"/>\n</consumables>\n\x3c!-- Apply the consumable to an item --\x3e\n<kits>\n    <kit id="spawn">\n        <item slot="1" amount="5" consumable="porkchop-that-says-yum" material="pork"/>\n    </kit>\n</kits>\n\x3c!-- Define the action the consumable will run --\x3e\n<actions>\n    <message id="say-yum" text="Yum!"/>\n</actions>\n'})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-xml",children:'\x3c!-- Create the consumable "fast-apple" --\x3e\n<consumables>\n    <consumable id="fast-apple" action="speed-kit" on="eat"/>\n</consumables>\n<kits>\n    \x3c!-- Apply the consumable to an item --\x3e\n    <kit id="spawn">\n        <item slot="1" consumable="fast-apple" name="Fast Apple" material="golden apple"/>\n    </kit>\n    \x3c!-- Define the kit the consumable gives you --\x3e\n    <kit id="speed-kit">\n        <effect duration="4" amplifier="10">speed</effect>\n    </kit>\n</kits>\n'})}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-xml",children:'\x3c!-- Create the consumable "heal" --\x3e\n\x3c!-- When the healing stick is right clicked, it is "consumed" and applies the\nheal-click action (kit) that sets the player\'s health back to 20 --\x3e\n<consumables>\n    <consumable id="heal" action="heal-click" on="click" override="true" consume="true"/>\n</consumables>\n<kits>\n    \x3c!-- Apply the consumable to an item --\x3e\n    <kit id="spawn-kit">\n        <item material="stick" consumable="heal" name="Healing stick!"/>\n    </kit>\n    \x3c!-- Define the kit the consumable gives you --\x3e\n    <kit id="heal-click">\n        <health>20</health>\n    </kit>\n</kits>\n'})})]})}function h(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>l,a:()=>c});var t=n(7294);const i={},d=t.createContext(i);function c(e){const s=t.useContext(d);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(d.Provider,{value:s},e.children)}}}]);