"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[39],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>b});var l=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,l,o=function(e,t){if(null==e)return{};var n,l,o={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=l.createContext({}),i=function(e){var t=l.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=i(e.components);return l.createElement(d.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=i(n),b=o,k=c["".concat(d,".").concat(b)]||c[b]||u[b]||a;return n?l.createElement(k,r(r({ref:t},m),{},{components:n})):l.createElement(k,r({ref:t},m))}));function b(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,r=new Array(a);r[0]=c;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s.mdxType="string"==typeof e?e:o,r[1]=s;for(var i=2;i<a;i++)r[i]=n[i];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}c.displayName="MDXCreateElement"},8852:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>i});var l=n(7462),o=(n(7294),n(3905));const a={id:"monument-modes",title:"Monument Modes"},r=void 0,s={unversionedId:"modules/objectives/monument-modes",id:"modules/objectives/monument-modes",title:"Monument Modes",description:"This module can be used to customize the modes that cores and destroyables cycle",source:"@site/docs/modules/objectives/monument-modes.mdx",sourceDirName:"modules/objectives",slug:"/modules/objectives/monument-modes",permalink:"/docs/modules/objectives/monument-modes",draft:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/src/docs/modules/objectives/monument-modes.mdx",tags:[],version:"current",frontMatter:{id:"monument-modes",title:"Monument Modes"},sidebar:"docs",previous:{title:"Destroy the Core",permalink:"/docs/modules/objectives/dtc"},next:{title:"Blitz",permalink:"/docs/modules/objectives/blitz"}},d={},i=[{value:"Mode Attributes",id:"mode-attributes",level:5},{value:"Examples",id:"examples",level:4}],m={toc:i};function u(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,l.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This module can be used to customize the modes that cores and destroyables cycle\nthrough, and at what duration they do so. When a monuments mode changes its\nmaterial is usually changed from a hard to a soft block."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"<modes>")," tag can contain any number of ",(0,o.kt)("inlineCode",{parentName:"p"},"<mode>")," tags at any duration, even at the same time.\nEach ",(0,o.kt)("inlineCode",{parentName:"p"},"<mode>")," has configurable characteristics that define it."),(0,o.kt)("div",{className:"table-container"},(0,o.kt)("table",null,(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",null,"Element"),(0,o.kt)("th",null,"Description"),(0,o.kt)("th",null,"Value/Children"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("label",null,"<modes> </modes>")),(0,o.kt)("td",null,"Node containing the monument modes for this match."),(0,o.kt)("td",null,(0,o.kt)("span",{className:"badge badge--secondary"},"Mode Elements"))),(0,o.kt)("tr",null,(0,o.kt)("th",null,"Sub-elements"),(0,o.kt)("th",null),(0,o.kt)("th",null)),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("label",null,"<mode/>")),(0,o.kt)("td",null,"An individual monument mode."),(0,o.kt)("td",null,(0,o.kt)("span",{className:"badge badge--secondary"},"Mode Attributes")))))),(0,o.kt)("h5",{id:"mode-attributes"},"Mode Attributes"),(0,o.kt)("div",{className:"table-container"},(0,o.kt)("table",null,(0,o.kt)("thead",null,(0,o.kt)("tr",null,(0,o.kt)("th",null,"Attribute"),(0,o.kt)("th",null,"Description"),(0,o.kt)("th",null,"Value"),(0,o.kt)("th",null,"Default"))),(0,o.kt)("tbody",null,(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("label",null,"after")),(0,o.kt)("td",null,(0,o.kt)("span",{className:"badge badge--danger"},"Required"),"Time from the start of the game till this mode takes effect. If a filter is defined, then it will be the time since the filter passes ",(0,o.kt)("label",null,"ALLOW"),"."),(0,o.kt)("td",null,(0,o.kt)("a",{href:"/docs/reference/misc/time-periods"},"Time Period")),(0,o.kt)("td",null)),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("label",null,"material")),(0,o.kt)("td",null,(0,o.kt)("span",{className:"badge badge--danger"},"Required"),"Material the core/destroyable changes to."),(0,o.kt)("td",null,(0,o.kt)("a",{href:"/docs/reference/items/inventory#material_matchers"},"Single Material Pattern")),(0,o.kt)("td",null)),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("label",null,"id")),(0,o.kt)("td",null,"The unique ID of the mode."),(0,o.kt)("td",null,(0,o.kt)("span",{className:"badge badge--primary"},"String")),(0,o.kt)("td",null)),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("label",null,"filter")),(0,o.kt)("td",null,"Filter that triggers mode countdown."),(0,o.kt)("td",null,(0,o.kt)("a",{href:"/docs/modules/mechanics/filters"},"Dynamic Filter")),(0,o.kt)("td",null)),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("label",null,"name")),(0,o.kt)("td",null,"Custom mode name, used for the mode change notice."),(0,o.kt)("td",null,(0,o.kt)("span",{className:"badge badge--primary"},"String")),(0,o.kt)("td",null)),(0,o.kt)("tr",null,(0,o.kt)("td",null,(0,o.kt)("label",null,"show-before")),(0,o.kt)("td",null,"The time before a mode is over to show it in the BossBar.",(0,o.kt)("br",null),"If ",(0,o.kt)("label",null,"show-before")," is set to 0, the mode is not shown in the boss bar at all."),(0,o.kt)("td",null,(0,o.kt)("a",{href:"/docs/reference/misc/time-periods"},"Time Period")),(0,o.kt)("td",null,"60 sec"))))),(0,o.kt)("h4",{id:"examples"},"Examples"),(0,o.kt)("p",null,"This specifies a mode that will change the material of affected objectives\nto gold blocks after ten minutes of gameplay."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<modes>\n    <mode after="10m" material="gold block"/>\n</modes>\n')),(0,o.kt)("p",null,"A mode can be triggered by a dynamic filter when it passes ",(0,o.kt)("inlineCode",{parentName:"p"},"ALLOW")," to PGM.\nIn this case, the ",(0,o.kt)("inlineCode",{parentName:"p"},"after")," attribute means the mode will change in the\ngiven amount of time after the filter changes to ",(0,o.kt)("inlineCode",{parentName:"p"},"ALLOW"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'\x3c!-- Turns objectives to emerald blocks 20 seconds after Red Monument and Blue Monument have been destryoed --\x3e\n<modes>\n    <mode after="20s" filter="modes-filter" material="emerald block"/>\n</modes>\n<filters>\n    <all id="modes-filter">\n        <objective>red-mon</objective>\n        <objective>blue-mon</objective>\n    </all>\n</filters>\n')),(0,o.kt)("p",null,"In order for an objective to change modes,\nit must have ",(0,o.kt)("inlineCode",{parentName:"p"},"modes")," or ",(0,o.kt)("inlineCode",{parentName:"p"},'mode-changes="true"')," in its element tag.\nObjectives with ",(0,o.kt)("inlineCode",{parentName:"p"},"mode-changes")," enabled will cycle through all\nmodes, regardless if the mode has an ID."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<destroyables name="Monument" materials="obsidian">\n    <destroyable owner="red" mode-changes="true">\n        <region><cuboid min="46,16,26" max="45,14,25"/></region>\n    </destroyable>\n    \x3c!-- destroyable is already affected by modes listed --\x3e\n</destroyable>\n<cores>\n    <core team="red" modes="gold-mode sandstone-mode glass-mode">\n        <region><cuboid min="10,15,12" max="12,13,16"/></region>\n    </core>\n</cores>\n<modes>\n    <mode after="5m" material="gold block" id="gold-mode"/>\n    <mode after="10m" material="sandstone" id="sandstone-mode"/>\n    <mode after="15m" material="glass" id="glass-mode"/>\n</modes>\n')),(0,o.kt)("p",null,"This shows a mode that will change the material of enabled objectives to\ncoal blocks after ten minutes of gameplay. The following text, ",(0,o.kt)("inlineCode",{parentName:"p"},"> > > EASY MODE < < <"),"\nwill be on top of the BossBar in yellow."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<modes>\n    <mode after="5m" material="coal block" name="`eEASY MODE"/>\n</modes>\n')),(0,o.kt)("p",null,"In this example, the two cores and the two monuments turn to glass in ten minutes, and the\ntwo cores will turn to gold in fifteen minutes. Enabling an objective's ",(0,o.kt)("inlineCode",{parentName:"p"},"mode-changes"),"\nattribute is not necessary in this case."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-xml"},'<cores>\n    <core team="red-team"  region="red-core" modes="glass-mode gold-mode"/>\n    <core team="blue-team" region="blu-core" modes="glass-mode gold-mode"/>\n</cores>\n<destroyables materials="obsidian">\n    <destroyable owner="red-team" modes="glass-mode" region="mon-red" name="Red Monument"/>\n    <destroyable owner="blue-team" modes="glass-mode" region="mon-blu" name="Blue Monument"/>\n</destroyables>\n<modes>\n    <mode id="glass-mode" after="10m" material="glass" name="`fGlass Mode"/>\n    <mode id="gold-mode" after="15m" material="gold block" name="`6Gold Mode"/>\n</modes>\n')))}u.isMDXComponent=!0}}]);