"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[726],{21:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var t=s(5893),l=s(1151);const a={id:"lanes",title:"Lanes"},r=void 0,i={id:"modules/mechanics/lanes",title:"Lanes",description:"Lanes are used in Race for Wool (RFW) style maps with two parallel lanes for the teams.",source:"@site/docs/modules/mechanics/lanes.mdx",sourceDirName:"modules/mechanics",slug:"/modules/mechanics/lanes",permalink:"/docs/modules/mechanics/lanes",draft:!1,unlisted:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/docs/modules/mechanics/lanes.mdx",tags:[],version:"current",lastUpdatedAt:1724740491e3,frontMatter:{id:"lanes",title:"Lanes"},sidebar:"docs",previous:{title:"Proximity Alarms",permalink:"/docs/modules/mechanics/proximity-alarms"},next:{title:"Damage",permalink:"/docs/modules/mechanics/damage"}},d={},c=[{value:"Lanes Element",id:"lanes-element",level:4},{value:"Lane Attributes",id:"lane-attributes",level:4},{value:"Examples",id:"examples",level:3}];function o(e){const n={a:"a",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,l.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.p,{children:"Lanes are used in Race for Wool (RFW) style maps with two parallel lanes for the teams.\nThey prevent players from leaving their team's lane and entering the enemies' lane."}),"\n",(0,t.jsx)(n.h4,{id:"lanes-element",children:"Lanes Element"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Element"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"<lanes> </lanes>"})}),(0,t.jsx)(n.td,{children:"Node containing this world's lanes."})]})})]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Sub-elements"}),(0,t.jsx)(n.th,{}),(0,t.jsx)(n.th,{children:"Value/Children"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"<lane> </lane>"})}),(0,t.jsx)(n.td,{children:"A single lane definition."}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/modules/mechanics/regions",children:"Regions"})})]})})]}),"\n",(0,t.jsx)(n.h4,{id:"lane-attributes",children:"Lane Attributes"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Attribute"}),(0,t.jsx)(n.th,{children:"Description"}),(0,t.jsx)(n.th,{children:"Value"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"team"})}),(0,t.jsxs)(n.td,{children:[(0,t.jsx)("span",{className:"badge badge--danger",children:"Required"}),"The team the lane belongs to and in which they have to stay inside."]}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"/docs/modules/format/teams",children:"Team ID"})})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-xml",children:'<lanes>\n    <lane team="blue">\n        <region id="blue-lane-total"/>\n        <region id="blue-spawn-rooms"/>\n    </lane>\n    <lane team="red">\n        <region id="red-lane-total"/>\n        <region id="red-spawn-rooms"/>\n    </lane>\n</lanes>\n'})})]})}function h(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>i,a:()=>r});var t=s(7294);const l={},a=t.createContext(l);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);