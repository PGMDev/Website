"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3827],{3457:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>n,default:()=>o,frontMatter:()=>a,metadata:()=>l,toc:()=>c});var i=t(5893),r=t(1151);const a={id:"proximity-alarms",title:"Proximity Alarms"},n=void 0,l={id:"modules/mechanics/proximity-alarms",title:"Proximity Alarms",description:"Proximity Alarms can be used to alert players when an enemy enters a specified area.",source:"@site/docs/modules/mechanics/proximity-alarms.mdx",sourceDirName:"modules/mechanics",slug:"/modules/mechanics/proximity-alarms",permalink:"/docs/modules/mechanics/proximity-alarms",draft:!1,unlisted:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/docs/modules/mechanics/proximity-alarms.mdx",tags:[],version:"current",frontMatter:{id:"proximity-alarms",title:"Proximity Alarms"},sidebar:"docs",previous:{title:"Portals",permalink:"/docs/modules/mechanics/portals"},next:{title:"Lanes",permalink:"/docs/modules/mechanics/lanes"}},d={},c=[{value:"Proximity-alarm Attributes",id:"proximity-alarm-attributes",level:4},{value:"Proximity-alarm Sub-elements",id:"proximity-alarm-sub-elements",level:4},{value:"Examples",id:"examples",level:3}];function h(e){const s={a:"a",code:"code",em:"em",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.p,{children:"Proximity Alarms can be used to alert players when an enemy enters a specified area.\nFlares will go off around the protected area, with the color of the detected player's team, and all allied players will receive an alert message with sound."}),"\n",(0,i.jsxs)(s.p,{children:["If the ",(0,i.jsx)(s.code,{children:"<notify>"})," subelement is not defined, the proximity-alarm message is sent only to players who ",(0,i.jsx)(s.em,{children:"cannot"})," be detected, i.e. those who do not match the detection filter.\nIf the ",(0,i.jsx)(s.code,{children:"<detect>"})," attribute is missing no message will be sent, which means that only players who can see or hear the flares will know when the alarm is tripped."]}),"\n",(0,i.jsxs)(s.p,{children:["Flares will only be set off if a ",(0,i.jsx)(s.code,{children:'flare-radius=""'}),' is defined.\nIf this attribute is missing a message must be specified to alert players.\nThis is how the alarm can be made "silent", so that enemies may not realize that they have been detected.']}),"\n",(0,i.jsxs)("div",{className:"table-container",children:[(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Element"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"<proximity-alarms> </proximity-alarms>"})}),(0,i.jsx)(s.td,{children:"Node containing this map's proximity-alarms."})]})})]}),(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Sub-elements"}),(0,i.jsx)(s.th,{}),(0,i.jsx)(s.th,{children:"Value/Children"})]})}),(0,i.jsx)(s.tbody,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"<proximity-alarm>"})}),(0,i.jsx)(s.td,{children:"An individual proximity-alarm node."}),(0,i.jsx)(s.td,{children:(0,i.jsx)("span",{className:"badge badge--secondary",children:"Proximity-alarm Sub-elements"})})]})})]})]}),"\n",(0,i.jsx)(s.h4,{id:"proximity-alarm-attributes",children:"Proximity-alarm Attributes"}),"\n",(0,i.jsx)("div",{className:"table-container",children:(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Attribute"}),(0,i.jsx)(s.th,{children:"Description"}),(0,i.jsx)(s.th,{children:"Value"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"region"})}),(0,i.jsxs)(s.td,{children:[(0,i.jsx)("span",{className:"badge badge--secondary",title:"Can be either this attribute or a sub-element.",children:"Property"}),(0,i.jsx)("span",{className:"badge badge--danger",children:"Required"}),"The region this alarm applies to."]}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/docs/modules/mechanics/regions",children:"Region"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"message"})}),(0,i.jsx)(s.td,{children:"The message to show in chat when a player is detected."}),(0,i.jsx)(s.td,{children:(0,i.jsx)("span",{className:"badge badge--primary",children:"Formatted Text"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"flare-radius"})}),(0,i.jsx)(s.td,{children:"The radius of the circular area to show flares in, centered on the proximity-alarm region."}),(0,i.jsx)(s.td,{children:(0,i.jsx)("span",{className:"badge badge--primary",children:"Number"})})]})]})]})}),"\n",(0,i.jsx)(s.h4,{id:"proximity-alarm-sub-elements",children:"Proximity-alarm Sub-elements"}),"\n",(0,i.jsx)("div",{className:"table-container",children:(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Element"}),(0,i.jsx)(s.th,{children:"Description"}),(0,i.jsx)(s.th,{children:"Value/Children"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"<region>"})}),(0,i.jsxs)(s.td,{children:[(0,i.jsx)("span",{className:"badge badge--secondary",title:"Can be either this attribute or a sub-element.",children:"Property"}),(0,i.jsx)("span",{className:"badge badge--danger",children:"Required"}),"The region this alarm applies to, treated as a region union."]}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/docs/modules/mechanics/regions",children:"Regions"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"<detect>"})}),(0,i.jsx)(s.td,{children:"Filter who gets detected by the proximity alarm."}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/docs/modules/mechanics/filters",children:"Filter"})})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"<notify>"})}),(0,i.jsx)(s.td,{children:"Filter who gets notified by the proximity alarm."}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.a,{href:"/docs/modules/mechanics/filters",children:"Filter"})})]})]})]})}),"\n",(0,i.jsx)(s.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-xml",children:'<proximity-alarms>\n    <proximity-alarm message="Enemy detected at Blue monument!" flare-radius="4">\n        <region>\n            <cylinder base="27.5,119,-26.5" radius="7.5" height="15"/>\n        </region>\n        <detect>\n            <team>red</team>\n        </detect>\n    </proximity-alarm>\n</proximity-alarms>\n'})})]})}function o(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>l,a:()=>n});var i=t(7294);const r={},a=i.createContext(r);function n(e){const s=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),i.createElement(a.Provider,{value:s},e.children)}}}]);