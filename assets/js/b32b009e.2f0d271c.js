"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[818],{8304:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>h,frontMatter:()=>n,metadata:()=>i,toc:()=>d});var r=t(5893),a=t(1151);const n={id:"tracking-compass",title:"Tracking Compass"},l=void 0,i={id:"modules/mechanics/tracking-compass",title:"Tracking Compass",description:"The Tracking Compass module allows you to override the vanilla compass behavior by pointing",source:"@site/docs/modules/mechanics/tracking-compass.mdx",sourceDirName:"modules/mechanics",slug:"/modules/mechanics/tracking-compass",permalink:"/docs/modules/mechanics/tracking-compass",draft:!1,unlisted:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/docs/modules/mechanics/tracking-compass.mdx",tags:[],version:"current",lastUpdatedAt:1721766315e3,frontMatter:{id:"tracking-compass",title:"Tracking Compass"},sidebar:"docs",previous:{title:"Spawners",permalink:"/docs/modules/mechanics/spawners"},next:{title:"Items & Armor",permalink:"/docs/modules/gear/items"}},c={},d=[{value:"Compass Element",id:"compass-element",level:4},{value:"Compass Attributes",id:"compass-attributes",level:5},{value:"Player/Flag Attribute",id:"playerflag-attribute",level:5},{value:"Examples",id:"examples",level:2}];function o(e){const s={a:"a",code:"code",h2:"h2",h4:"h4",h5:"h5",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,a.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.p,{children:"The Tracking Compass module allows you to override the vanilla compass behavior by pointing\nit to a player of interest. In addition, you can control how the compass selects the target to track."}),"\n",(0,r.jsx)(s.h4,{id:"compass-element",children:"Compass Element"}),"\n",(0,r.jsxs)("div",{className:"table-container",children:[(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Element"}),(0,r.jsx)(s.th,{children:"Description"})]})}),(0,r.jsx)(s.tbody,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"<compass> </compass>"})}),(0,r.jsx)(s.td,{children:"Node containing all compass properties used in this map."})]})})]}),(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Sub-element"}),(0,r.jsx)(s.th,{})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"<player>"})}),(0,r.jsx)(s.td,{children:"An individual compass property pointing to the nearest player passing a filter."})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"<flag>"})}),(0,r.jsx)(s.td,{children:"An individual compass property pointing to a specific flag."})]})]})]})]}),"\n",(0,r.jsx)(s.h5,{id:"compass-attributes",children:"Compass Attributes"}),"\n",(0,r.jsx)("div",{className:"table-container",children:(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Attribute"}),(0,r.jsx)(s.th,{children:"Description"}),(0,r.jsx)(s.th,{children:"Value"}),(0,r.jsx)(s.th,{children:"Default"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"order"})}),(0,r.jsxs)(s.td,{children:["When using ",(0,r.jsx)(s.code,{children:"DEFINITION_ORDER"}),", the compass targets first matching target. When using ",(0,r.jsx)(s.code,{children:"CLOSEST"}),", the compass goes through all matching targets and chooses the one closest to the player."]}),(0,r.jsxs)(s.td,{children:[(0,r.jsx)(s.code,{children:"DEFINITION_ORDER"}),(0,r.jsx)("br",{}),(0,r.jsx)(s.code,{children:"CLOSEST"})]}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"show-distance"})}),(0,r.jsx)(s.td,{children:"Show the distance between the compass holder and tracked player in meters."}),(0,r.jsx)(s.td,{children:(0,r.jsx)("span",{className:"badge badge--primary",children:"true/false"})}),(0,r.jsx)(s.td,{children:"false"})]})]})]})}),"\n",(0,r.jsx)(s.h5,{id:"playerflag-attribute",children:"Player/Flag Attribute"}),"\n",(0,r.jsx)("div",{className:"table-container",children:(0,r.jsxs)(s.table,{children:[(0,r.jsx)(s.thead,{children:(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.th,{children:"Attribute"}),(0,r.jsx)(s.th,{children:"Description"}),(0,r.jsx)(s.th,{children:"Value"}),(0,r.jsx)(s.th,{children:"Default"})]})}),(0,r.jsxs)(s.tbody,{children:[(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"filter"})}),(0,r.jsx)(s.td,{children:"Filters who should be tracked by the compass."}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"/docs/modules/mechanics/filters",children:"Filter"})}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"holder-filter"})}),(0,r.jsx)(s.td,{children:"Filters out what compass targets can be eligible for what players, e.g. a team targets a different flag than the other team."}),(0,r.jsx)(s.td,{children:(0,r.jsx)(s.a,{href:"/docs/modules/mechanics/filters",children:"Filter"})}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"name"})}),(0,r.jsx)(s.td,{children:'The title name that describes the tracked flag or player\'s role, e.g. "Wool Carrier."'}),(0,r.jsx)(s.td,{children:(0,r.jsx)("span",{className:"badge badge--primary",children:"Formatted Text"})}),(0,r.jsx)(s.td,{})]}),(0,r.jsxs)(s.tr,{children:[(0,r.jsx)(s.td,{children:(0,r.jsx)(s.code,{children:"show-player"})}),(0,r.jsxs)(s.td,{children:["Show the tracked player's username to the compass holder.",(0,r.jsx)("br",{}),(0,r.jsx)(s.strong,{children:"Note:"})," This is only applicable to ",(0,r.jsx)(s.code,{children:"<player>"})," sub-element."]}),(0,r.jsx)(s.td,{children:(0,r.jsx)("span",{className:"badge badge--primary",children:"true/false"})}),(0,r.jsx)(s.td,{children:"false"})]})]})]})}),"\n",(0,r.jsx)(s.h2,{id:"examples",children:"Examples"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{className:"language-xml",children:'<compass show-distance="true">\n    <player filter="always" show-player="true"/>\n</compass>\n\n<compass>\n    <player filter="always" name="Wool Carrier"/>\n</compass>\n\n<compass order="DEFINITION_ORDER">\n    <player filter="wool-carrier" name="Wool Carrier"/>\n    <player filter="enemy" show-player="true" name="Nearest Enemy"/>\n</compass>\n\n<compass>\n    <player holder-filter="red-team" filter="blue-carrier" show-player="true"/>\n    <flag holder-filter="red-team">blue-flag</flag>\n    \n    <player holder-filter="blue-team" filter="red-carrier" show-player="true"/>\n    <flag holder-filter="blue-team" name="Some other name">red-flag</flag>\n</compass>\n'})})]})}function h(e={}){const{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>i,a:()=>l});var r=t(7294);const a={},n=r.createContext(a);function l(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:l(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);