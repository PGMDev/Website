"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9903],{3905:(e,t,l)=>{l.d(t,{Zo:()=>u,kt:()=>g});var n=l(7294);function a(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function r(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,n)}return l}function d(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?r(Object(l),!0).forEach((function(t){a(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):r(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function s(e,t){if(null==e)return{};var l,n,a=function(e,t){if(null==e)return{};var l,n,a={},r=Object.keys(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||(a[l]=e[l]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)l=r[n],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(a[l]=e[l])}return a}var i=n.createContext({}),o=function(e){var t=n.useContext(i),l=t;return e&&(l="function"==typeof e?e(t):d(d({},t),e)),l},u=function(e){var t=o(e.components);return n.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},k=n.forwardRef((function(e,t){var l=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),k=o(l),g=a,p=k["".concat(i,".").concat(g)]||k[g]||c[g]||r;return l?n.createElement(p,d(d({ref:t},u),{},{components:l})):n.createElement(p,d({ref:t},u))}));function g(e,t){var l=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=l.length,d=new Array(r);d[0]=k;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:a,d[1]=s;for(var o=2;o<r;o++)d[o]=l[o];return n.createElement.apply(null,d)}return n.createElement.apply(null,l)}k.displayName="MDXCreateElement"},2053:(e,t,l)=>{l.r(t),l.d(t,{assets:()=>i,contentTitle:()=>d,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>o});var n=l(7462),a=(l(7294),l(3905));const r={id:"cleaning-files",title:"Cleaning Files"},d=void 0,s={unversionedId:"guides/packaging/cleaning-files",id:"guides/packaging/cleaning-files",title:"Cleaning Files",description:"Minecraft will generate quite a few files in your world folder when you create a world. Most of these files are not needed and by deleting them you can reduce the file size when it comes to uploading your world.",source:"@site/docs/guides/packaging/cleaning-files.mdx",sourceDirName:"guides/packaging",slug:"/guides/packaging/cleaning-files",permalink:"/docs/guides/packaging/cleaning-files",draft:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/src/docs/guides/packaging/cleaning-files.mdx",tags:[],version:"current",frontMatter:{id:"cleaning-files",title:"Cleaning Files"},sidebar:"Guides",previous:{title:"XML Conventions",permalink:"/docs/guides/xml-pointers/conventions"},next:{title:"Pruning Chunks",permalink:"/docs/guides/packaging/pruning-chunks"}},i={},o=[],u={toc:o};function c(e){let{components:t,...l}=e;return(0,a.kt)("wrapper",(0,n.Z)({},u,l,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Minecraft will generate quite a few files in your world folder when you create a world. Most of these files are not needed and by deleting them you can reduce the file size when it comes to uploading your world."),(0,a.kt)("p",null,"Below is a table which displays all the files that may be generated in your world folder, along with a description and whether or not the file is required."),(0,a.kt)("div",{className:"table-container"},(0,a.kt)("table",null,(0,a.kt)("thead",null,(0,a.kt)("tr",null,(0,a.kt)("th",{style:{minWidth:"230px"}},"File Name"),(0,a.kt)("th",null,"Required?"),(0,a.kt)("th",null,"Description"))),(0,a.kt)("tbody",null,(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"level.dat")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--success"},"YES")),(0,a.kt)("td",null,"Stores global information about the world such as name and generation type")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"region/")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--success"},"YES")),(0,a.kt)("td",null,"Contains all the region files of your world")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"data/map_[#].dat")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--warning"},"DEPENDS")),(0,a.kt)("td",null,"Stores map data for craft-able maps -- remove if you are not using custom map items")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"level.dat_mcr")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"NO")),(0,a.kt)("td",null,"A backup of level.dat before the map was converted from the MCRegion world format to Anvil")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"level.dat_old")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"NO")),(0,a.kt)("td",null,"A backup level.dat")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"session.lock")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"NO")),(0,a.kt)("td",null,"A timestamp when the level was last accessed")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"playerdata/"),"or",(0,a.kt)("label",null,"players/")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"NO")),(0,a.kt)("td",null,"Contains files which store the individual states of each player")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"data/villages.dat")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"NO")),(0,a.kt)("td",null,"Stores information about Villages in the world")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"DIM-1/ & DIM1/")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"NO")),(0,a.kt)("td",null,"Contains all the region files for the Nether and The End")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"stats/")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"NO")),(0,a.kt)("td",null,"Contains achievements and other stats")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"##MCEDIT.TEMP##/")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"NO")),(0,a.kt)("td",null,"Generated by MCEdit")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"forcedchunks.dat")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"NO")),(0,a.kt)("td",null,"Forced chunks")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"customnpcs")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"NO")),(0,a.kt)("td",null,"Generated by MCEdit/NBTEdit")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"NEI")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"NO")),(0,a.kt)("td",null,"Generated by Not Enough Items")),(0,a.kt)("tr",null,(0,a.kt)("td",null,(0,a.kt)("label",null,"spc")),(0,a.kt)("td",null,(0,a.kt)("span",{className:"badge badge--danger"},"NO")),(0,a.kt)("td",null,"Generated by Single Player Commands"))))))}c.isMDXComponent=!0}}]);