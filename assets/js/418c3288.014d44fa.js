"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1061],{1875:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var n=s(5893),o=s(1151);const i={id:"other",title:"Other Gamemodes"},r=void 0,a={id:"modules/objectives/other",title:"Other Gamemodes",description:"Team Death-match",source:"@site/docs/modules/objectives/other.mdx",sourceDirName:"modules/objectives",slug:"/modules/objectives/other",permalink:"/docs/modules/objectives/other",draft:!1,unlisted:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/docs/modules/objectives/other.mdx",tags:[],version:"current",lastUpdatedAt:1716777506e3,frontMatter:{id:"other",title:"Other Gamemodes"},sidebar:"docs",previous:{title:"Scoring",permalink:"/docs/modules/objectives/scoring"},next:{title:"Payload (Experimental)",permalink:"/docs/modules/objectives/payload"}},l={},c=[{value:"Team Death-match",id:"team-death-match",level:2},{value:"Free-For-All",id:"free-for-all",level:2},{value:"Rage",id:"rage",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"team-death-match",children:"Team Death-match"}),"\n",(0,n.jsxs)(t.p,{children:["This gamemode uses the ",(0,n.jsx)(t.a,{href:"/docs/modules/objectives/scoring",children:"scoring"})," module to run the game for a specified amount of time, after which the team with the highest score wins.\nTeams increase their score by killing players from the other team or capturing points from a ",(0,n.jsx)(t.a,{href:"/docs/modules/objectives/scoring#score-boxes",children:"score box"}),"."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["To be able to score points for kills and deaths, the ",(0,n.jsx)(t.code,{children:"<kills>"})," and ",(0,n.jsx)(t.code,{children:"<deaths>"})," elements are required."]})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-xml",children:"<score>\n    <kills>1</kills> \x3c!-- +1 points for a kill --\x3e\n    <deaths>1</deaths> \x3c!-- -1 points for dying --\x3e\n</score>\n\n\x3c!-- Time until the match ends in seconds (10 minutes) --\x3e\n<time>600</time>\n"})}),"\n",(0,n.jsx)(t.h2,{id:"free-for-all",children:"Free-For-All"}),"\n",(0,n.jsxs)(t.p,{children:["The FFA gamemode uses the ",(0,n.jsx)(t.a,{href:"/docs/modules/format/players",children:"players"})," instead\nof the ",(0,n.jsx)(t.a,{href:"/docs/modules/format/teams",children:"teams"})," module to create a team-less match.\nDepending on the modules used, players can increase their score by killing other players\nuntil a score or time limit is reached or by capturing objectives, etc."]}),"\n",(0,n.jsx)(t.admonition,{type:"note",children:(0,n.jsxs)(t.p,{children:["To be able to score points for kills and deaths the ",(0,n.jsx)(t.code,{children:"<kills>"})," and ",(0,n.jsx)(t.code,{children:"<deaths>"})," elements are required."]})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-xml",children:'<players max="16" max-overfill="20"/>\n<time>8m</time>\n\n<score>\n    <kills>1</kills>\n    <deaths>1</deaths>\n</score>\n'})}),"\n",(0,n.jsx)(t.h2,{id:"rage",children:"Rage"}),"\n",(0,n.jsx)(t.p,{children:"Enable the one-hit kill, rage style gamemode."}),"\n",(0,n.jsx)(t.p,{children:"One-hit kills will only be applied to items that have a sharpness enchantment greater than level 1.\nOne-shot arrow kills will only be applied to bows that have a power enchantment greater than level 1."}),"\n",(0,n.jsx)(t.admonition,{type:"info",children:(0,n.jsx)(t.p,{children:"This module must be used in conjunction with another gamemode."})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-xml",children:"<rage/>\n\n<time>8m</time>\n<score>\n    <limit>15</limit>\n</score>\n"})})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>a,a:()=>r});var n=s(7294);const o={},i=n.createContext(o);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);