"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2225],{2560:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>m,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var i=a(5893),t=a(1151);const s={id:"warlock",title:"Warlock (DTM)",image:"/img/examples/warlock1.png",keywords:["dtm"]},r=void 0,o={id:"examples/warlock",title:"Warlock (DTM)",description:"Warlock is a Destroy the Monument map. Players must destroy a single obsidian monument to win.",source:"@site/docs/examples/warlock.mdx",sourceDirName:"examples",slug:"/examples/warlock",permalink:"/docs/examples/warlock",draft:!1,unlisted:!1,editUrl:"https://github.com/PGMDev/Website/tree/master/docs/examples/warlock.mdx",tags:[],version:"current",frontMatter:{id:"warlock",title:"Warlock (DTM)",image:"/img/examples/warlock1.png",keywords:["dtm"]},sidebar:"Examples",previous:{title:"The Fenland (DTM)",permalink:"/docs/examples/the-fenland"}},l={},c=[];function d(e){const n={a:"a",code:"code",em:"em",img:"img",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Warlock is a Destroy the Monument map. Players must destroy a single obsidian monument to win."}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.em,{children:["Source: ",(0,i.jsx)(n.a,{href:"https://github.com/MCResourcePile/overcast-maps/tree/master/maps/warlock",children:"Warlock"})," by ",(0,i.jsx)(n.a,{href:"https://github.com/McSpider",children:"McSpider"}),"."]}),"\n",(0,i.jsx)(n.img,{src:a(2764).Z+"",width:"2060",height:"1005"}),"\n",(0,i.jsx)(n.em,{children:"Players can build and jump their way to the other side of the map. The cobwebs define\nthe out of bounds region. Underground hallways lead to the monument."})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.img,{src:a(5288).Z+"",width:"2060",height:"1005"}),"\n",(0,i.jsx)(n.em,{children:"The monument is obsidian protected by stone bricks and a wooden pressure plate on top of it."})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/general/main",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nEvery map XML file starts with the XML header and then the base ",(0,i.jsx)(n.code,{children:"<map>"})," module."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<map proto="1.4.2">\n\x3c!-- Specifies what the map is called --\x3e\n<name>Warlock</name>\n\x3c!-- Shows the map creation date when a user runs /map in game --\x3e\n<created>2012-08-29</created>\n\x3c!-- States what version the map is --\x3e\n<version>1.3.12</version>\n\x3c!-- Tells the teams what the objective is in order to win the game --\x3e\n<objective>Break the obsidian from the enemy team\'s monument.</objective>\n\x3c!-- States who made the map --\x3e\n<authors>\n    <author uuid="e5953ddf-c1fc-4405-9ac9-6939631cd185"/> \x3c!-- McSpider --\x3e\n</authors>\n\x3c!-- States who made contributions to the map --\x3e\n<contributors>\n    <contributor uuid="ef4ea031-998f-4ec9-b7b6-1bdd428bcef8" contribution="Map Feedback and XML Coding"/> \x3c!-- Plastix --\x3e\n</contributors>\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/format/teams",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nDefine the teams' ",(0,i.jsx)(n.a,{href:"/docs/reference/misc/formatting#chatColors",children:"colors"}),", names, and how many people can be on each team."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<teams>\n    <team id="red-team" color="dark red" max="13">Red</team>\n    <team id="blue-team" color="blue" max="13">Blue</team>\n</teams>\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/gear/kits",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nDefine the kit that players will receive."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<kits>\n    <kit id="spawn-kit">\n        <clear/>\n        <item slot="0" unbreakable="true" material="iron sword"/>\n        <item slot="1" unbreakable="true" material="bow">\n            <enchantment>infinity</enchantment>\n        </item>\n        <item slot="2" unbreakable="true" material="diamond pickaxe"/>\n        <item slot="3" unbreakable="true" material="iron axe"/>\n        <item slot="4" amount="64" material="glass"/>\n        <item slot="5" damage="2" amount="64" material="wood"/> \x3c!-- To get birch planks, damage must be "2" --\x3e\n        <item slot="6" amount="2" material="gold nugget"/>\n        <item slot="28" material="arrow"/>\n        <item slot="30" unbreakable="true" material="iron spade"/>\n        <helmet unbreakable="true" team-color="true" material="leather helmet"/>\n        <chestplate unbreakable="true" team-color="true" material="leather chestplate">\n            <enchantment level="2">protection projectile</enchantment>\n        </chestplate>\n        <leggings unbreakable="true" team-color="true" material="leather leggings"/>\n        <boots unbreakable="true" team-color="true" material="leather boots"/>\n        <effect duration="2">heal</effect>\n        <effect duration="4">damage resistance</effect>\n    </kit>\n</kits>\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/mechanics/spawns",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nDefine the spawn areas and the kit each team gets. The regions will be defined in a later section."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<spawns>\n    <spawn team="red-team" kit="spawn-kit" region="red-spawn-point"/>\n    <spawn team="blue-team" kit="spawn-kit" region="blue-spawn-point" yaw="180"/>\n    <default region="obs-spawn-point" yaw="90"/>\n</spawns>\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/objectives/dtm",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nThis specifies what material the monuments are made of and where each monument belongs to. The regions will be defined in a later section."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<destroyables name="Monument" materials="obsidian" mode-changes="true">\n    <destroyable owner="red-team" region="red-monument"/>\n    <destroyable owner="blue-team" region="blue-monument"/>\n</destroyables>\n\x3c!-- The monuments which are made of obsidian will turn into beacon blocks in 20 minutes --\x3e\n<modes>\n    <mode material="beacon" after="20m"/>\n</modes>\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/mechanics/filters",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nDefine the filters on the map and determine which events are allowed."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<filters>\n    \x3c!-- Query if the player is over a void area --\x3e\n    <not id="not-void">\n        <void/>\n    </not>\n    \x3c!-- Always deny beacon placement, destruction, or interaction --\x3e\n    <deny id="deny-beacon">\n        <material>beacon</material>\n    </deny>\n</filters>\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/mechanics/regions",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nDefine regions that can be used to apply spawns, filters, etc."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<regions>\n    <cuboid id="red-spawn-point" min="40,6,-30" max="44,6,-34"/>\n    <cuboid id="blue-spawn-point" min="40,6,31" max="44,6,35"/>\n    <point id="obs-spawn-point">133.5,22,0.5</point>\n    <cuboid id="red-monument" min="77,1,-36" max="78,3,-37"/>\n    <cuboid id="blue-monument" min="77,1,37" max="78,3,38"/>\n    <union id="spawns">\n        <union id="red-spawn">\n            <cuboid min="36,5,-38" max="55,11,-25"/>\n            <cuboid min="54,5,-31" max="61,11,-38"/>\n        </union>\n        <union id="blue-spawn">\n            <cuboid min="36,5,39" max="55,11,26"/>\n            <cuboid min="54,5,32" max="61,11,39"/>\n        </union>\n    </union>\n    <negative id="not-build-region">\n        <rectangle id="build-region" min="26,-49" max="120,50"/>\n    </negative>\n    \x3c!-- applicators --\x3e\n    <apply block="never" region="spawns" message="You may not edit spawn!"/>\n    <apply block="not-void" region="not-build-region" message="You may not edit the void!"/>\n    <apply use="deny-beacon"/>\n</regions>\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/gear/repair-remove-keep",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nWe do not want an excessive amount of items dropped on the map, so this allows us to manage\nhow to deal with dropped items more easily."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"\x3c!-- These items will drop, players that already have these items can pick it up and will be merged --\x3e\n<toolrepair>\n    <tool>iron sword</tool>\n    <tool>bow</tool>\n    <tool>diamond pickaxe</tool>\n    <tool>iron axe</tool>\n    <tool>iron spade</tool>\n</toolrepair>\n\x3c!-- If the player has these item, it will be saved in their inventory --\x3e\n<itemkeep>\n    <item>iron sword</item>\n    <item>bow</item>\n    <item>diamond pickaxe</item>\n    <item>iron axe</item>\n    <item>iron spade</item>\n    <item>arrow</item>\n    <item>wood</item>\n    <item>glass</item>\n    <item>golden apple</item>\n</itemkeep>\n\x3c!-- All of these items will be automatically removed when dropped --\x3e\n<itemremove>\n    <item>leather helmet</item>\n    <item>leather chestplate</item>\n    <item>leather leggings</item>\n    <item>leather boots</item>\n    <item>obsidian</item>\n    <item>beacon</item>\n    <item>ink sack</item>\n</itemremove>\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/blocks/blockdrops",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nYou can allow players to drop only specific blocks from their inventory, but not when they die or the blocks are broken in the world."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<block-drops>\n    <rule>\n        <filter>\n            <any>\n                <material>wood:2</material>\n                <material>glass</material>\n            </any>\n        </filter>\n        <drops>\n            <item chance="0" material="wood"/>\n        </drops>\n    </rule>\n</block-drops>\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/gear/tnt",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nConfigure how TNT behaves on a map."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<tnt>\n    \x3c!-- TNT will automatically ignite when placed --\x3e\n    <instantignite>on</instantignite>\n    \x3c!-- Do not require a license so TNT usage is not restricted --\x3e\n    <licensing>off</licensing>\n    \x3c!-- Players can't defuse a teammate's TNT --\x3e\n    <friendly-defuse>off</friendly-defuse>\n</tnt>\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/gear/kill-rewards",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nWe can make special kill rewards for players that fit certain criteria."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:'<kill-rewards>\n    \x3c!-- All players get a golden apple and a gold nugget after killing an enemy --\x3e\n    <kill-reward>\n        <item material="gold nugget"/>\n        <item material="golden apple"/>\n    </kill-reward>\n    \x3c!-- Players that kill two enemies in a row will get a Lapis Lazuli (represented as ink sack with damage value of 4) --\x3e\n    <kill-reward>\n        <filter>\n            <kill-streak count="2" repeat="true"/>\n        </filter>\n        <item damage="4" material="ink sack"/>\n    </kill-reward>\n</kill-rewards>\n'})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/mechanics/damage#hunger",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nPlayers do not need to worry about hunger in this map, so hunger is disabled."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"\x3c!-- Prevent hunger from depleting --\x3e\n<hunger>\n    <depletion>off</depletion>\n</hunger>\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/environment/world/#build-height",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nThis specifies how high players can build, however, it does not stop them from walking or breaking blocks above this limit."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"<maxbuildheight>25</maxbuildheight>\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/modules/general/main",children:(0,i.jsx)("i",{className:"icon-right",children:"\u27a1\ufe0f"})}),"\nClose the main ",(0,i.jsx)(n.code,{children:"<map>"})," module."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"</map>\n"})})]})}function m(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},2764:(e,n,a)=>{a.d(n,{Z:()=>i});const i=a.p+"assets/images/warlock1-17a1df5d4d70cc796369fe8832321fa0.png"},5288:(e,n,a)=>{a.d(n,{Z:()=>i});const i=a.p+"assets/images/warlock2-d5f89d401b9eb572b084bcbd4c7055b5.png"},1151:(e,n,a)=>{a.d(n,{Z:()=>o,a:()=>r});var i=a(7294);const t={},s=i.createContext(t);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);