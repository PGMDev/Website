(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{164:function(e,t,l){"use strict";l.r(t),l.d(t,"frontMatter",(function(){return c})),l.d(t,"metadata",(function(){return r})),l.d(t,"rightToc",(function(){return u})),l.d(t,"default",(function(){return d}));var a=l(1),n=l(9),b=(l(0),l(227)),c={id:"damage",title:"Damage"},r={id:"modules/mechanics/damage",title:"Damage",description:"### Friendly Fire",source:"@site/docs/modules/mechanics/damage.mdx",permalink:"/docs/modules/mechanics/damage",editUrl:"https://github.com/PGMDev/Website/edit/master/docs/modules/mechanics/damage.mdx",sidebar:"Modules",previous:{title:"Lanes",permalink:"/docs/modules/mechanics/lanes"},next:{title:"Gamerules",permalink:"/docs/modules/mechanics/gamerules"}},u=[{value:"Friendly Fire",id:"friendly-fire",children:[]},{value:"Difficulty",id:"difficulty",children:[]},{value:"Hunger",id:"hunger",children:[]},{value:"Damage Filtering",id:"damage-filtering",children:[]},{value:"Disable Damage",id:"disable-damage",children:[]},{value:"Damage Causes",id:"damage-causes",children:[]}],i={rightToc:u};function d(e){var t=e.components,l=Object(n.a)(e,["components"]);return Object(b.b)("wrapper",Object(a.a)({},i,l,{components:t,mdxType:"MDXLayout"}),Object(b.b)("h3",{id:"friendly-fire"},"Friendly Fire"),Object(b.b)("p",null,"Allows teammates to kill each other. Arrows will be absorbed if they hit a teammate."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<friendlyfire>on</friendlyfire> \x3c!-- Defaults to off --\x3e\n")),Object(b.b)("p",null,"Refunds arrows blocked by teammates from non-infinity bows."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<friendlyfirerefund>off</friendlyfirerefund> \x3c!-- Defaults to on --\x3e\n")),Object(b.b)("h3",{id:"difficulty"},"Difficulty"),Object(b.b)("p",null,"The difficulty level can be set to ",Object(b.b)("inlineCode",{parentName:"p"},"peaceful"),", ",Object(b.b)("inlineCode",{parentName:"p"},"easy"),", ",Object(b.b)("inlineCode",{parentName:"p"},"normal"),", or ",Object(b.b)("inlineCode",{parentName:"p"},"hard"),". The default is ",Object(b.b)("inlineCode",{parentName:"p"},"hard"),"."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<difficulty>easy</difficulty> \x3c!-- Defaults to hard --\x3e\n")),Object(b.b)("h3",{id:"hunger"},"Hunger"),Object(b.b)("p",null,"Specify if a player can starve to death, usually used with the difficulty setting.",Object(b.b)("br",null),"\nThis can also be accomplished with the ",Object(b.b)("inlineCode",{parentName:"p"},"naturalRegeneration")," ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"/docs/modules/mechanics/gamerules"}),"gamerule"),"."),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<hunger>\n    <depletion>off</depletion>\n</hunger>\n")),Object(b.b)("h3",{id:"damage-filtering"},"Damage Filtering"),Object(b.b)("p",null,"This module is used to filter when or if damage is applied to entities.\nIts contents can be a filter or combination of filters.\nIt doesn't have to be ",Object(b.b)("inlineCode",{parentName:"p"},"<allow>")," and ",Object(b.b)("inlineCode",{parentName:"p"},"<deny>")," at the top level but that's usually what you want.\nRegions can also be used since they are filters that filter for a location."),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Examples")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<damage>\n    <deny>\n        <cause>explosion</cause>\n    </deny>\n</damage>\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"\x3c!-- Deny damage events where the attacker is on the red team --\x3e\n<damage>\n    <deny>\n        <attacker>\n            <team>red</team>\n        </attacker>\n    </deny>\n</damage>\n")),Object(b.b)("h3",{id:"disable-damage"},"Disable Damage"),Object(b.b)("p",null,"Use this module to disable damage from specific causes."),Object(b.b)("p",null,"While almost every form of damage can be disabled safely it is recommended that you do ",Object(b.b)("strong",{parentName:"p"},"not")," disable ",Object(b.b)("inlineCode",{parentName:"p"},"VOID")," damage."),Object(b.b)("div",{className:"table-container"},Object(b.b)("table",null,Object(b.b)("thead",null,Object(b.b)("tr",null,Object(b.b)("th",null,"Disable Damage Element"),Object(b.b)("th",null,"Description"),Object(b.b)("th",null,"Value/Children"))),Object(b.b)("tbody",null,Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"<disabledamage> </disabledamage>")),Object(b.b)("td",null,"Node containing the disabled damage types."),Object(b.b)("td",null)),Object(b.b)("tr",null,Object(b.b)("th",null,"Sub-elements"),Object(b.b)("th",null),Object(b.b)("th",null)),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"<damage> </damage>")),Object(b.b)("td",null,"The damage type that is disabled."),Object(b.b)("td",null,Object(b.b)("a",{href:"#damage-causes"},"Damage Cause")))))),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Example")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),"<disabledamage>\n    \x3c!-- Disable fall damage --\x3e\n    <damage>fall</damage>\n</disabledamage>\n")),Object(b.b)("h4",{id:"block-explosion-attributes"},"Block Explosion Attributes"),Object(b.b)("p",null,"The ",Object(b.b)("inlineCode",{parentName:"p"},"BLOCK_EXPLOSION")," damage cause has several extended attributes to customize who/what gets damaged. Only attributes with ",Object(b.b)("inlineCode",{parentName:"p"},"false")," as the value need to be explicitly defined since all attributes default to ",Object(b.b)("inlineCode",{parentName:"p"},"true"),"."),Object(b.b)("div",{className:"table-responsive"},Object(b.b)("table",{className:"table table-striped table-condensed"},Object(b.b)("thead",null,Object(b.b)("tr",null,Object(b.b)("th",null,"Attribute"),Object(b.b)("th",null,"Description"),Object(b.b)("th",null,"Value"),Object(b.b)("th",null,"Default"))),Object(b.b)("tbody",null,Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"ally")),Object(b.b)("td",null,"Damage to players on the same team as the person that caused the explosion."),Object(b.b)("td",null,Object(b.b)("span",{className:"badge badge--primary"},"true/false")),Object(b.b)("td",null,"true")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"self")),Object(b.b)("td",null,"Damage to the person that caused the explosion."),Object(b.b)("td",null,Object(b.b)("span",{className:"badge badge--primary"},"true/false")),Object(b.b)("td",null,"true")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"enemy")),Object(b.b)("td",null,"Damage to players not on the same team as the person that caused the explosion."),Object(b.b)("td",null,Object(b.b)("span",{className:"badge badge--primary"},"true/false")),Object(b.b)("td",null,"true")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"other")),Object(b.b)("td",null,"Any other damage caused by the explosion."),Object(b.b)("td",null,Object(b.b)("span",{className:"badge badge--primary"},"true/false")),Object(b.b)("td",null,"true"))))),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Example")),Object(b.b)("pre",null,Object(b.b)("code",Object(a.a)({parentName:"pre"},{className:"language-xml"}),'<disabledamage>\n    \x3c!-- TNT damages enemies and self, but not teammates --\x3e\n    <damage ally="true" self="false" enemy="false" other="false">block explosion</damage>\n</disabledamage>\n')),Object(b.b)("h3",{id:"damage-causes"},"Damage Causes"),Object(b.b)("p",null,"The following damage causes can be used in the disable damage module.\nThese causes do not need to be capitalized or contain underscores, i.e., ",Object(b.b)("inlineCode",{parentName:"p"},"FIRE_TICK")," and ",Object(b.b)("inlineCode",{parentName:"p"},"fire tick")," will both work."),Object(b.b)("div",{className:"table-container"},Object(b.b)("table",null,Object(b.b)("thead",null,Object(b.b)("tr",null,Object(b.b)("th",null,"Name"),Object(b.b)("th",null,"Description"))),Object(b.b)("tbody",null,Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"CONTACT")),Object(b.b)("td",null,"Damage caused when an entity contacts a block such as a Cactus.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"ENTITY_ATTACK")),Object(b.b)("td",null,"Damage caused when an entity attacks another entity.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"PROJECTILE")),Object(b.b)("td",null,"Damage caused when attacked by a projectile.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"SUFFOCATION")),Object(b.b)("td",null,"Damage caused by being put in a block.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"FALL")),Object(b.b)("td",null,"Damage caused when an entity falls a distance greater than 3 blocks.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"FIRE")),Object(b.b)("td",null,"Damage caused by direct exposure to fire.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"FIRE_TICK")),Object(b.b)("td",null,"Damage caused due to burns caused by fire.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"MELTING")),Object(b.b)("td",null,"Damage caused due to a snowman melting.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"LAVA")),Object(b.b)("td",null,"Damage caused by direct exposure to lava.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"DROWNING")),Object(b.b)("td",null,"Damage caused by running out of air while in water.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"BLOCK_EXPLOSION")),Object(b.b)("td",null,"Damage caused by being in the area when a block explodes.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"ENTITY_EXPLOSION")),Object(b.b)("td",null,"Damage caused by being in the area when an entity, such as a Creeper, explodes.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"VOID")),Object(b.b)("td",null,"Damage caused by falling into the void.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"LIGHTNING")),Object(b.b)("td",null,"Damage caused by being struck by lightning.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"SUICIDE")),Object(b.b)("td",null,'Damage caused by committing suicide using the command "/kill".')),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"STARVATION")),Object(b.b)("td",null,"Damage caused by starving due to having an empty hunger bar.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"POISON")),Object(b.b)("td",null,"Damage caused due to an ongoing poison effect.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"MAGIC")),Object(b.b)("td",null,"Damage caused by being hit by a damage potion or spell.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"WITHER")),Object(b.b)("td",null,"Damage caused by Wither potion effect.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"FALLING_BLOCK")),Object(b.b)("td",null,"Damage caused by being hit by a falling block which deals damage.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"THORNS")),Object(b.b)("td",null,"Damage caused in retaliation to another attack by the Thorns enchantment.")),Object(b.b)("tr",null,Object(b.b)("td",null,Object(b.b)("label",null,"CUSTOM")),Object(b.b)("td",null,"Custom damage."))))),Object(b.b)("p",null,"Copied from: ",Object(b.b)("a",Object(a.a)({parentName:"p"},{href:"https://hub.spigotmc.org/javadocs/bukkit/org/bukkit/event/entity/EntityDamageEvent.DamageCause.html"}),"bukkit docs - Damage Cause")))}d.isMDXComponent=!0},227:function(e,t,l){"use strict";l.d(t,"a",(function(){return s})),l.d(t,"b",(function(){return m}));var a=l(0),n=l.n(a);function b(e,t,l){return t in e?Object.defineProperty(e,t,{value:l,enumerable:!0,configurable:!0,writable:!0}):e[t]=l,e}function c(e,t){var l=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),l.push.apply(l,a)}return l}function r(e){for(var t=1;t<arguments.length;t++){var l=null!=arguments[t]?arguments[t]:{};t%2?c(Object(l),!0).forEach((function(t){b(e,t,l[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(l)):c(Object(l)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(l,t))}))}return e}function u(e,t){if(null==e)return{};var l,a,n=function(e,t){if(null==e)return{};var l,a,n={},b=Object.keys(e);for(a=0;a<b.length;a++)l=b[a],t.indexOf(l)>=0||(n[l]=e[l]);return n}(e,t);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);for(a=0;a<b.length;a++)l=b[a],t.indexOf(l)>=0||Object.prototype.propertyIsEnumerable.call(e,l)&&(n[l]=e[l])}return n}var i=n.a.createContext({}),d=function(e){var t=n.a.useContext(i),l=t;return e&&(l="function"==typeof e?e(t):r({},t,{},e)),l},s=function(e){var t=d(e.components);return n.a.createElement(i.Provider,{value:t},e.children)},o={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},O=Object(a.forwardRef)((function(e,t){var l=e.components,a=e.mdxType,b=e.originalType,c=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),s=d(l),O=a,m=s["".concat(c,".").concat(O)]||s[O]||o[O]||b;return l?n.a.createElement(m,r({ref:t},i,{components:l})):n.a.createElement(m,r({ref:t},i))}));function m(e,t){var l=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var b=l.length,c=new Array(b);c[0]=O;var r={};for(var u in t)hasOwnProperty.call(t,u)&&(r[u]=t[u]);r.originalType=e,r.mdxType="string"==typeof e?e:a,c[1]=r;for(var i=2;i<b;i++)c[i]=l[i];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,l)}O.displayName="MDXCreateElement"}}]);